#ifndef _TYPES_H_

#define _TYPES_H_

// new types
typedef char               BYTE;
typedef unsigned char      UBYTE;
typedef short int          WORD;
typedef unsigned short int UWORD;
typedef long               DWORD;
typedef unsigned long      UDWORD;

// pointer of function : strcmp() or _stricmp()
typedef int (* STR_CMP_FUNC) (const char *, const char *);

#define FALSE  0
#define TRUE  -1

// all .mpq to open
typedef enum {D2DATA, D2EXP, PATCH_D2, MPQ_MAX} MPQTYPE_ENUM;

// all .txt to open
typedef enum {NONE,
              AWM, // include Armor + Weapons + Misc.txt 
              ARMOR,
              WEAPONS,
              MISC,
              ARMTYPE,
              AUTOMAGIC,
              AUTOMAP,
              BELTS,
              BODYLOCS,
              BOOKS,
              CHARSTATS,
              COLORS,
              COMPCODE,
              COMPOSIT,
              CUBEMAIN,
              CUBEMOD,
              CUBETYPE,
              DIFFICULTYLEVELS,
              ELEMTYPES,
              EVENTS,
              EXPERIENCE,
              GAMBLE,
              GEMS,
              HIREDESC,
              HIRELING,
              HITCLASS,
              INVENTORY,
              ITEMRATIO,
              ITEMSTATCOST,
              ITEMTYPES,
              LEVELS,
              LOWQUALITYITEMS,
              LVLMAZE,
              LVLPREST,
              LVLSUB,
              LVLTYPES,
              LVLWARP,
              MAGICPREFIX,
              MAGICSUFFIX,
              MISSCALC,
              MISSILES,
              MONAI,
              MONEQUIP,
              MONLVL,
              MONMODE,
              MONNAME,
              MONPLACE,
              MONPRESET,
              MONPROP,
              MONSEQ,
              MONSOUNDS,
              MONSTATS,
              MONSTATS2,
              MONTYPE,
              MONUMOD,
              NPC,
              OBJECTS,
              OBJGROUP,
              OBJMODE,
              OBJTYPE,
              OVERLAY,
              PETTYPE,
              PLAYERCLASS,
              PLRMODE,
              PLRTYPE,
              PROPERTIES,
              QUALITYITEMS,
              RAREPREFIX,
              RARESUFFIX,
              RUNES,
              SETITEMS,
              SETS,
              SHRINES,
              SKILLCALC,
              SKILLDESC,
              SKILLS,
              SOUNDENVIRON,
              SOUNDS,
              STATES,
              STOREPAGE,
              SUPERUNIQUES,
              TREASURECLASSEX,
              UNIQUEAPPELLATION,
              UNIQUEITEMS,
              UNIQUEPREFIX,
              UNIQUESUFFIX,
              UNIQUETITLE,
              WEAPONCLASS,
              TXT_MAX
} TXT_ENUM;

// Armor.txt + Weapons.txt + Misc.txt
typedef enum {AWM_NAME,
              AWM_VERSION,
              AWM_COMPACTSAVE,
              AWM_RARITY,
              AWM_SPAWNABLE,
              AWM_MINAC,
              AWM_MAXAC,
              AWM_ABSORBS,
              AWM_SPEED,
              AWM_REQSTR,
              AWM_BLOCK,
              AWM_DURABILITY,
              AWM_NODURABILITY,
              AWM_LEVEL,
              AWM_LEVELREQ,
              AWM_COST,
              AWM_GAMBLECOST,
              AWM_CODE,
              AWM_NAMESTR,
              AWM_MAGICLVL,
              AWM_AUTOPREFIX,
              AWM_ALTERNATEGFX,
              AWM_OPENBETAGFX,
              AWM_NORMCODE,
              AWM_UBERCODE,
              AWM_ULTRACODE,
              AWM_SPELLOFFSET,
              AWM_COMPONENT,
              AWM_INVWIDTH,
              AWM_INVHEIGHT,
              AWM_HASINV,
              AWM_GEMSOCKETS,
              AWM_GEMAPPLYTYPE,
              AWM_FLIPPYFILE,
              AWM_INVFILE,
              AWM_UNIQUEINVFILE,
              AWM_SETINVFILE,
              AWM_RARM,
              AWM_LARM,
              AWM_TORSO,
              AWM_LEGS,
              AWM_RSPAD,
              AWM_LSPAD,
              AWM_USEABLE,
              AWM_THROWABLE,
              AWM_STACKABLE,
              AWM_MINSTACK,
              AWM_MAXSTACK,
              AWM_TYPE,
              AWM_TYPE2,
              AWM_DROPSOUND,
              AWM_DROPSFXFRAME,
              AWM_USESOUND,
              AWM_UNIQUE,
              AWM_TRANSPARENT,
              AWM_TRANSTBL,
              AWM_QUIVERED,
              AWM_LIGHTRADIUS,
              AWM_BELT,
              AWM_QUEST,
              AWM_MISSILETYPE,
              AWM_DURWARNING,
              AWM_QNTWARNING,
              AWM_MINDAM,
              AWM_MAXDAM,
              AWM_STRBONUS,
              AWM_DEXBONUS,
              AWM_GEMOFFSET,
              AWM_BITFIELD1,
              AWM_CHARSIMIN,
              AWM_CHARSIMAX,
              AWM_CHARSIMAGICMIN,
              AWM_CHARSIMAGICMAX,
              AWM_CHARSIMAGICLVL,
              AWM_GHEEDMIN,
              AWM_GHEEDMAX,
              AWM_GHEEDMAGICMIN,
              AWM_GHEEDMAGICMAX,
              AWM_GHEEDMAGICLVL,
              AWM_AKARAMIN,
              AWM_AKARAMAX,
              AWM_AKARAMAGICMIN,
              AWM_AKARAMAGICMAX,
              AWM_AKARAMAGICLVL,
              AWM_FARAMIN,
              AWM_FARAMAX,
              AWM_FARAMAGICMIN,
              AWM_FARAMAGICMAX,
              AWM_FARAMAGICLVL,
              AWM_LYSANDERMIN,
              AWM_LYSANDERMAX,
              AWM_LYSANDERMAGICMIN,
              AWM_LYSANDERMAGICMAX,
              AWM_LYSANDERMAGICLVL,
              AWM_DROGNANMIN,
              AWM_DROGNANMAX,
              AWM_DROGNANMAGICMIN,
              AWM_DROGNANMAGICMAX,
              AWM_DROGNANMAGICLVL,
              AWM_HRATLIMIN,
              AWM_HRATLIMAX,
              AWM_HRATLIMAGICMIN,
              AWM_HRATLIMAGICMAX,
              AWM_HRATLIMAGICLVL,
              AWM_ALKORMIN,
              AWM_ALKORMAX,
              AWM_ALKORMAGICMIN,
              AWM_ALKORMAGICMAX,
              AWM_ALKORMAGICLVL,
              AWM_ORMUSMIN,
              AWM_ORMUSMAX,
              AWM_ORMUSMAGICMIN,
              AWM_ORMUSMAGICMAX,
              AWM_ORMUSMAGICLVL,
              AWM_ELZIXMIN,
              AWM_ELZIXMAX,
              AWM_ELZIXMAGICMIN,
              AWM_ELZIXMAGICMAX,
              AWM_ELZIXMAGICLVL,
              AWM_ASHEARAMIN,
              AWM_ASHEARAMAX,
              AWM_ASHEARAMAGICMIN,
              AWM_ASHEARAMAGICMAX,
              AWM_ASHEARAMAGICLVL,
              AWM_CAINMIN,
              AWM_CAINMAX,
              AWM_CAINMAGICMIN,
              AWM_CAINMAGICMAX,
              AWM_CAINMAGICLVL,
              AWM_HALBUMIN,
              AWM_HALBUMAX,
              AWM_HALBUMAGICMIN,
              AWM_HALBUMAGICMAX,
              AWM_HALBUMAGICLVL,
              AWM_JAMELLAMIN,
              AWM_JAMELLAMAX,
              AWM_JAMELLAMAGICMIN,
              AWM_JAMELLAMAGICMAX,
              AWM_JAMELLAMAGICLVL,
              AWM_LARZUKMIN,
              AWM_LARZUKMAX,
              AWM_LARZUKMAGICMIN,
              AWM_LARZUKMAGICMAX,
              AWM_LARZUKMAGICLVL,
              AWM_MALAHMIN,
              AWM_MALAHMAX,
              AWM_MALAHMAGICMIN,
              AWM_MALAHMAGICMAX,
              AWM_MALAHMAGICLVL,
              AWM_DREHYAMIN,
              AWM_DREHYAMAX,
              AWM_DREHYAMAGICMIN,
              AWM_DREHYAMAGICMAX,
              AWM_DREHYAMAGICLVL,
              AWM_SOURCEART,
              AWM_GAMEART,
              AWM_TRANSFORM,
              AWM_INVTRANS,
              AWM_SKIPNAME,
              AWM_NIGHTMAREUPGRADE,
              AWM_HELLUPGRADE,
              AWM_NAMEABLE,

              AWM_1OR2HANDED,
              AWM_2HANDED,
              AWM_2HANDMINDAM,
              AWM_2HANDMAXDAM,
              AWM_MINMISDAM,
              AWM_MAXMISDAM,
              AWM_RANGEADDER,
              AWM_REQDEX,
              AWM_WCLASS,
              AWM_2HANDEDWCLASS,
              AWM_HITCLASS,
              AWM_SPAWNSTACK,
              AWM_QUESTDIFFCHECK,
              AWM_PERMSTOREITEM,

              AWM_SZFLAVORTEXT,
              AWM_SPECIAL,
              AWM_TRANSMOGRIFY,
              AWM_TMOGTYPE,
              AWM_TMOGMIN,
              AWM_TMOGMAX,
              AWM_AUTOBELT,
              AWM_SPELLICON,
              AWM_PSPELL,
              AWM_STATE,
              AWM_CSTATE1,
              AWM_CSTATE2,
              AWM_LEN,
              AWM_STAT1,
              AWM_CALC1,
              AWM_STAT2,
              AWM_CALC2,
              AWM_STAT3,
              AWM_CALC3,
              AWM_SPELLDESC,
              AWM_SPELLDESCSTR,
              AWM_SPELLDESCCALC,
              AWM_BETTERGEM,
              AWM_MULTIBUY,

              AWM_SUBTYPE,

              AWM_COL_MAX
} AWM_COL_ENUM;

// ArmType.txt
typedef enum {ARMTYPE_NAME,
              ARMTYPE_TOKEN,
              ARMTYPE_COL_MAX
} ARMTYPE_COL_ENUM;

// AutoMagic.txt
typedef enum {AUTOMAGIC_NAME,
              AUTOMAGIC_VERSION,
              AUTOMAGIC_SPAWNABLE,
              AUTOMAGIC_RARE,
              AUTOMAGIC_LEVEL,
              AUTOMAGIC_MAXLEVEL,
              AUTOMAGIC_LEVELREQ,
              AUTOMAGIC_CLASSSPECIFIC,
              AUTOMAGIC_CLASS,
              AUTOMAGIC_CLASSLEVELREQ,
              AUTOMAGIC_FREQUENCY,
              AUTOMAGIC_GROUP,
              AUTOMAGIC_MOD1CODE,
              AUTOMAGIC_MOD1PARAM,
              AUTOMAGIC_MOD1MIN,
              AUTOMAGIC_MOD1MAX,
              AUTOMAGIC_MOD2CODE,
              AUTOMAGIC_MOD2PARAM,
              AUTOMAGIC_MOD2MIN,
              AUTOMAGIC_MOD2MAX,
              AUTOMAGIC_MOD3CODE,
              AUTOMAGIC_MOD3PARAM,
              AUTOMAGIC_MOD3MIN,
              AUTOMAGIC_MOD3MAX,
              AUTOMAGIC_TRANSFORM,
              AUTOMAGIC_TRANSFORMCOLOR,
              AUTOMAGIC_ITYPE1,
              AUTOMAGIC_ITYPE2,
              AUTOMAGIC_ITYPE3,
              AUTOMAGIC_ITYPE4,
              AUTOMAGIC_ITYPE5,
              AUTOMAGIC_ITYPE6,
              AUTOMAGIC_ITYPE7,
              AUTOMAGIC_ETYPE1,
              AUTOMAGIC_ETYPE2,
              AUTOMAGIC_ETYPE3,
              AUTOMAGIC_ETYPE4,
              AUTOMAGIC_ETYPE5,
              AUTOMAGIC_DIVIDE,
              AUTOMAGIC_MULTIPLY,
              AUTOMAGIC_ADD,
              AUTOMAGIC_COL_MAX
} AUTOMAGIC_COL_ENUM;

// AutoMap.txt
typedef enum {AUTOMAP_LEVELNAME,
              AUTOMAP_TILENAME,
              AUTOMAP_STYLE,
              AUTOMAP_STARTSEQUENCE,
              AUTOMAP_ENDSEQUENCE,
              AUTOMAP_TYPE1,
              AUTOMAP_CEL1,
              AUTOMAP_TYPE2,
              AUTOMAP_CEL2,
              AUTOMAP_TYPE3,
              AUTOMAP_CEL3,
              AUTOMAP_TYPE4,
              AUTOMAP_CEL4,
              AUTOMAP_COL_MAX
} AUTOMAP_COL_ENUM;

// Belts.txt
typedef enum {BELTS_NAME,
              BELTS_NUMBOXES,
              BELTS_BOXWIDTH,
              BELTS_BOXHEIGHT,
              BELTS_BOX1LEFT,
              BELTS_BOX1RIGHT,
              BELTS_BOX1TOP,
              BELTS_BOX1BOTTOM,
              BELTS_BOX2LEFT,
              BELTS_BOX2RIGHT,
              BELTS_BOX2TOP,
              BELTS_BOX2BOTTOM,
              BELTS_BOX3LEFT,
              BELTS_BOX3RIGHT,
              BELTS_BOX3TOP,
              BELTS_BOX3BOTTOM,
              BELTS_BOX4LEFT,
              BELTS_BOX4RIGHT,
              BELTS_BOX4TOP,
              BELTS_BOX4BOTTOM,
              BELTS_BOX5LEFT,
              BELTS_BOX5RIGHT,
              BELTS_BOX5TOP,
              BELTS_BOX5BOTTOM,
              BELTS_BOX6LEFT,
              BELTS_BOX6RIGHT,
              BELTS_BOX6TOP,
              BELTS_BOX6BOTTOM,
              BELTS_BOX7LEFT,
              BELTS_BOX7RIGHT,
              BELTS_BOX7TOP,
              BELTS_BOX7BOTTOM,
              BELTS_BOX8LEFT,
              BELTS_BOX8RIGHT,
              BELTS_BOX8TOP,
              BELTS_BOX8BOTTOM,
              BELTS_BOX9LEFT,
              BELTS_BOX9RIGHT,
              BELTS_BOX9TOP,
              BELTS_BOX9BOTTOM,
              BELTS_BOX10LEFT,
              BELTS_BOX10RIGHT,
              BELTS_BOX10TOP,
              BELTS_BOX10BOTTOM,
              BELTS_BOX11LEFT,
              BELTS_BOX11RIGHT,
              BELTS_BOX11TOP,
              BELTS_BOX11BOTTOM,
              BELTS_BOX12LEFT,
              BELTS_BOX12RIGHT,
              BELTS_BOX12TOP,
              BELTS_BOX12BOTTOM,
              BELTS_BOX13LEFT,
              BELTS_BOX13RIGHT,
              BELTS_BOX13TOP,
              BELTS_BOX13BOTTOM,
              BELTS_BOX14LEFT,
              BELTS_BOX14RIGHT,
              BELTS_BOX14TOP,
              BELTS_BOX14BOTTOM,
              BELTS_BOX15LEFT,
              BELTS_BOX15RIGHT,
              BELTS_BOX15TOP,
              BELTS_BOX15BOTTOM,
              BELTS_BOX16LEFT,
              BELTS_BOX16RIGHT,
              BELTS_BOX16TOP,
              BELTS_BOX16BOTTOM,
              BELTS_COL_MAX
} BELTS_COL_ENUM;

// BodyLocs.txt
typedef enum {BODYLOCS_BODYLOCATION,
              BODYLOCS_CODE,
              BODYLOCS_COL_MAX
} BODYLOCS_COL_ENUM;

// Books.txt
typedef enum {BOOKS_NAME,
              BOOKS_NAMCO,
              BOOKS_COMPLETED,
              BOOKS_SCROLLSPELLCODE,
              BOOKS_BOOKSPELLCODE,
              BOOKS_PSPELL,
              BOOKS_SPELLICON,
              BOOKS_SCROLLSKILL,
              BOOKS_BOOKSKILL,
              BOOKS_BASECOST,
              BOOKS_COSTPERCHARGE,
              BOOKS_COL_MAX
} BOOKS_COL_ENUM;

// CharStats.txt
typedef enum {CHARSTATS_CLASS,
              CHARSTATS_STR,
              CHARSTATS_DEX,
              CHARSTATS_INT,
              CHARSTATS_VIT,
              CHARSTATS_TOT,
              CHARSTATS_STAMINA,
              CHARSTATS_HPADD,
              CHARSTATS_PERCENTSTR,
              CHARSTATS_PERCENTDEX,
              CHARSTATS_PERCENTINT,
              CHARSTATS_PERCENTVIT,
              CHARSTATS_MANAREGEN,
              CHARSTATS_TOHITFACTOR,
              CHARSTATS_WALKVELOCITY,
              CHARSTATS_RUNVELOCITY,
              CHARSTATS_RUNDRAIN,
              CHARSTATS_COMMENT,
              CHARSTATS_LIFEPERLEVEL,
              CHARSTATS_STAMINAPERLEVEL,
              CHARSTATS_MANAPERLEVEL,
              CHARSTATS_LIFEPERVITALITY,
              CHARSTATS_STAMINAPERVITALITY,
              CHARSTATS_MANAPERMAGIC,
              CHARSTATS_STATPERLEVEL,
              CHARSTATS_WALK,
              CHARSTATS_RUN,
              CHARSTATS_SWING,
              CHARSTATS_SPELL,
              CHARSTATS_GETHIT,
              CHARSTATS_BOW,
              CHARSTATS_BLOCKFACTOR,
              CHARSTATS_STARTSKILL,
              CHARSTATS_SKILL1,
              CHARSTATS_SKILL2,
              CHARSTATS_SKILL3,
              CHARSTATS_SKILL4,
              CHARSTATS_SKILL5,
              CHARSTATS_SKILL6,
              CHARSTATS_SKILL7,
              CHARSTATS_SKILL8,
              CHARSTATS_SKILL9,
              CHARSTATS_SKILL10,
              CHARSTATS_STRALLSKILLS,
              CHARSTATS_STRSKILLTAB1,
              CHARSTATS_STRSKILLTAB2,
              CHARSTATS_STRSKILLTAB3,
              CHARSTATS_STRCLASSONLY,
              CHARSTATS_BASEWCLASS,
              CHARSTATS_ITEM1,
              CHARSTATS_ITEM1LOC,
              CHARSTATS_ITEM1COUNT,
              CHARSTATS_ITEM2,
              CHARSTATS_ITEM2LOC,
              CHARSTATS_ITEM2COUNT,
              CHARSTATS_ITEM3,
              CHARSTATS_ITEM3LOC,
              CHARSTATS_ITEM3COUNT,
              CHARSTATS_ITEM4,
              CHARSTATS_ITEM4LOC,
              CHARSTATS_ITEM4COUNT,
              CHARSTATS_ITEM5,
              CHARSTATS_ITEM5LOC,
              CHARSTATS_ITEM5COUNT,
              CHARSTATS_ITEM6,
              CHARSTATS_ITEM6LOC,
              CHARSTATS_ITEM6COUNT,
              CHARSTATS_ITEM7,
              CHARSTATS_ITEM7LOC,
              CHARSTATS_ITEM7COUNT,
              CHARSTATS_ITEM8,
              CHARSTATS_ITEM8LOC,
              CHARSTATS_ITEM8COUNT,
              CHARSTATS_ITEM9,
              CHARSTATS_ITEM9LOC,
              CHARSTATS_ITEM9COUNT,
              CHARSTATS_ITEM10,
              CHARSTATS_ITEM10LOC,
              CHARSTATS_ITEM10COUNT,
              CHARSTATS_COL_MAX
} CHARSTATS_COL_ENUM;

// Colors.txt
typedef enum {COLORS_TRANSFORMCOLOR,
              COLORS_CODE,
              COLORS_COL_MAX
} COLORS_COL_ENUM;

// CompCode.txt
typedef enum {COMPCODE_COMPONENT,
              COMPCODE_CODE,
              COMPCODE_COL_MAX
} COMPCODE_COL_ENUM;

// Composit.txt
typedef enum {COMPOSIT_NAME,
              COMPOSIT_TOKEN,
              COMPOSIT_COL_MAX
} COMPOSIT_COL_ENUM;

// CubeMain.txt
typedef enum {CUBEMAIN_DESCRIPTION,
              CUBEMAIN_ENABLED,
              CUBEMAIN_LADDER,
              CUBEMAIN_MINDIFF,
              CUBEMAIN_VERSION,
              CUBEMAIN_OP,
              CUBEMAIN_PARAM,
              CUBEMAIN_VALUE,
              CUBEMAIN_CLASS,
              CUBEMAIN_NUMINPUTS,
              CUBEMAIN_INPUT1,
              CUBEMAIN_INPUT2,
              CUBEMAIN_INPUT3,
              CUBEMAIN_INPUT4,
              CUBEMAIN_INPUT5,
              CUBEMAIN_INPUT6,
              CUBEMAIN_INPUT7,
              CUBEMAIN_OUTPUT,
              CUBEMAIN_LVL,
              CUBEMAIN_PLVL,
              CUBEMAIN_ILVL,
              CUBEMAIN_MOD1,
              CUBEMAIN_MOD1CHANCE,
              CUBEMAIN_MOD1PARAM,
              CUBEMAIN_MOD1MIN,
              CUBEMAIN_MOD1MAX,
              CUBEMAIN_MOD2,
              CUBEMAIN_MOD2CHANCE,
              CUBEMAIN_MOD2PARAM,
              CUBEMAIN_MOD2MIN,
              CUBEMAIN_MOD2MAX,
              CUBEMAIN_MOD3,
              CUBEMAIN_MOD3CHANCE,
              CUBEMAIN_MOD3PARAM,
              CUBEMAIN_MOD3MIN,
              CUBEMAIN_MOD3MAX,
              CUBEMAIN_MOD4,
              CUBEMAIN_MOD4CHANCE,
              CUBEMAIN_MOD4PARAM,
              CUBEMAIN_MOD4MIN,
              CUBEMAIN_MOD4MAX,
              CUBEMAIN_MOD5,
              CUBEMAIN_MOD5CHANCE,
              CUBEMAIN_MOD5PARAM,
              CUBEMAIN_MOD5MIN,
              CUBEMAIN_MOD5MAX,
              CUBEMAIN_OUTPUTB,
              CUBEMAIN_BLVL,
              CUBEMAIN_BPLVL,
              CUBEMAIN_BILVL,
              CUBEMAIN_BMOD1,
              CUBEMAIN_BMOD1CHANCE,
              CUBEMAIN_BMOD1PARAM,
              CUBEMAIN_BMOD1MIN,
              CUBEMAIN_BMOD1MAX,
              CUBEMAIN_BMOD2,
              CUBEMAIN_BMOD2CHANCE,
              CUBEMAIN_BMOD2PARAM,
              CUBEMAIN_BMOD2MIN,
              CUBEMAIN_BMOD2MAX,
              CUBEMAIN_BMOD3,
              CUBEMAIN_BMOD3CHANCE,
              CUBEMAIN_BMOD3PARAM,
              CUBEMAIN_BMOD3MIN,
              CUBEMAIN_BMOD3MAX,
              CUBEMAIN_BMOD4,
              CUBEMAIN_BMOD4CHANCE,
              CUBEMAIN_BMOD4PARAM,
              CUBEMAIN_BMOD4MIN,
              CUBEMAIN_BMOD4MAX,
              CUBEMAIN_BMOD5,
              CUBEMAIN_BMOD5CHANCE,
              CUBEMAIN_BMOD5PARAM,
              CUBEMAIN_BMOD5MIN,
              CUBEMAIN_BMOD5MAX,
              CUBEMAIN_OUTPUTC,
              CUBEMAIN_CLVL,
              CUBEMAIN_CPLVL,
              CUBEMAIN_CILVL,
              CUBEMAIN_CMOD1,
              CUBEMAIN_CMOD1CHANCE,
              CUBEMAIN_CMOD1PARAM,
              CUBEMAIN_CMOD1MIN,
              CUBEMAIN_CMOD1MAX,
              CUBEMAIN_CMOD2,
              CUBEMAIN_CMOD2CHANCE,
              CUBEMAIN_CMOD2PARAM,
              CUBEMAIN_CMOD2MIN,
              CUBEMAIN_CMOD2MAX,
              CUBEMAIN_CMOD3,
              CUBEMAIN_CMOD3CHANCE,
              CUBEMAIN_CMOD3PARAM,
              CUBEMAIN_CMOD3MIN,
              CUBEMAIN_CMOD3MAX,
              CUBEMAIN_CMOD4,
              CUBEMAIN_CMOD4CHANCE,
              CUBEMAIN_CMOD4PARAM,
              CUBEMAIN_CMOD4MIN,
              CUBEMAIN_CMOD4MAX,
              CUBEMAIN_CMOD5,
              CUBEMAIN_CMOD5CHANCE,
              CUBEMAIN_CMOD5PARAM,
              CUBEMAIN_CMOD5MIN,
              CUBEMAIN_CMOD5MAX,
              CUBEMAIN_COL_MAX
} CUBEMAIN_COL_ENUM;

// CubeMod.txt
typedef enum {CUBEMOD_CUBEMODIFIERTYPE,
              CUBEMOD_CODE,
              CUBEMOD_COL_MAX
} CUBEMOD_COL_ENUM;

// CubeType.txt
typedef enum {CUBETYPE_CUBEITEMCLASS,
              CUBETYPE_CODE,
              CUBETYPE_COL_MAX
} CUBETYPE_COL_ENUM;

// DifficultyLevels.txt
typedef enum {DIFFICULTYLEVELS_NAME,
              DIFFICULTYLEVELS_RESISTPENALTY,
              DIFFICULTYLEVELS_DEATHEXPPENALTY,
              DIFFICULTYLEVELS_UBERCODEODDSNORMAL,
              DIFFICULTYLEVELS_UBERCODEODDSGOOD,
              DIFFICULTYLEVELS_ULTRACODEODDSNORMAL,
              DIFFICULTYLEVELS_ULTRACODEODDSGOOD,
              DIFFICULTYLEVELS_MONSTERSKILLBONUS,
              DIFFICULTYLEVELS_MONSTERFREEZEDIVIZOR,
              DIFFICULTYLEVELS_MONSTERCOLDDIVISOR,
              DIFFICULTYLEVELS_AICURSEDIVISOR,
              DIFFICULTYLEVELS_LIFESTEALDIVISOR,
              DIFFICULTYLEVELS_MANASTEALDIVISOR,
              DIFFICULTYLEVELS_UNIQUEDAMAGEBONUS,
              DIFFICULTYLEVELS_CHAMPIONDAMAGEBONUS,
              DIFFICULTYLEVELS_HIREABLEBOSSDAMAGEPERCENT,
              DIFFICULTYLEVELS_MONSTERCEDAMAGEPERCENT,
              DIFFICULTYLEVELS_STATICFIELDMIN,
              DIFFICULTYLEVELS_GAMBLERARE,
              DIFFICULTYLEVELS_GAMBLESET,
              DIFFICULTYLEVELS_GAMBLEUNIQUE,
              DIFFICULTYLEVELS_GAMBLEUBER,
              DIFFICULTYLEVELS_GAMBLEULTRA,
              DIFFICULTYLEVELS_COL_MAX
} DIFFICULTYLEVELS_COL_ENUM;

// ElemTypes.txt
typedef enum {ELEMTYPES_ELEMENTALTYPE,
              ELEMTYPES_CODE,
              ELEMTYPES_COL_MAX
} ELEMTYPES_COL_ENUM;

// Events.txt
typedef enum {EVENTS_EVENT,
              EVENTS_COL_MAX
} EVENTS_COL_ENUM;

// Experience.txt
typedef enum {EXPERIENCE_LEVEL,
              EXPERIENCE_AMAZON,
              EXPERIENCE_SORCERESS,
              EXPERIENCE_NECROMANCER,
              EXPERIENCE_PALADIN,
              EXPERIENCE_BARBARIAN,
              EXPERIENCE_DRUID,
              EXPERIENCE_ASSASSIN,
              EXPERIENCE_EXPRATIO,
              EXPERIENCE_COL_MAX
} EXPERIENCE_COL_ENUM;

// Gamble.txt
typedef enum {GAMBLE_NAME,
              GAMBLE_CODE,
              GAMBLE_COL_MAX
} GAMBLE_COL_ENUM;

// Gems.txt
typedef enum {GEMS_NAME,
              GEMS_LETTER,
              GEMS_TRANSFORM,
              GEMS_CODE,
              GEMS_NUMMODS,
              GEMS_WEAPONMOD1CODE,
              GEMS_WEAPONMOD1PARAM,
              GEMS_WEAPONMOD1MIN,
              GEMS_WEAPONMOD1MAX,
              GEMS_WEAPONMOD2CODE,
              GEMS_WEAPONMOD2PARAM,
              GEMS_WEAPONMOD2MIN,
              GEMS_WEAPONMOD2MAX,
              GEMS_WEAPONMOD3CODE,
              GEMS_WEAPONMOD3PARAM,
              GEMS_WEAPONMOD3MIN,
              GEMS_WEAPONMOD3MAX,
              GEMS_HELMMOD1CODE,
              GEMS_HELMMOD1PARAM,
              GEMS_HELMMOD1MIN,
              GEMS_HELMMOD1MAX,
              GEMS_HELMMOD2CODE,
              GEMS_HELMMOD2PARAM,
              GEMS_HELMMOD2MIN,
              GEMS_HELMMOD2MAX,
              GEMS_HELMMOD3CODE,
              GEMS_HELMMOD3PARAM,
              GEMS_HELMMOD3MIN,
              GEMS_HELMMOD3MAX,
              GEMS_SHIELDMOD1CODE,
              GEMS_SHIELDMOD1PARAM,
              GEMS_SHIELDMOD1MIN,
              GEMS_SHIELDMOD1MAX,
              GEMS_SHIELDMOD2CODE,
              GEMS_SHIELDMOD2PARAM,
              GEMS_SHIELDMOD2MIN,
              GEMS_SHIELDMOD2MAX,
              GEMS_SHIELDMOD3CODE,
              GEMS_SHIELDMOD3PARAM,
              GEMS_SHIELDMOD3MIN,
              GEMS_SHIELDMOD3MAX,
              GEMS_COL_MAX
} GEMS_COL_ENUM;

// HireDesc.txt
typedef enum {HIREDESC_HIRELINGDESCRIPTION,
              HIREDESC_CODE,
              HIREDESC_COL_MAX
} HIREDESC_COL_ENUM;

// Hireling.txt
typedef enum {HIRELING_HIRELING,
              HIRELING_SUBTYPE,
              HIRELING_VERSION,
              HIRELING_ID,
              HIRELING_CLASS,
              HIRELING_ACT,
              HIRELING_DIFFICULTY,
              HIRELING_LEVEL,
              HIRELING_SELLER,
              HIRELING_NAMEFIRST,
              HIRELING_NAMELAST,
              HIRELING_GOLD,
              HIRELING_EXPLVL,
              HIRELING_HP,
              HIRELING_HPLVL,
              HIRELING_DEFENSE,
              HIRELING_DEFLVL,
              HIRELING_STR,
              HIRELING_STRLVL,
              HIRELING_DEX,
              HIRELING_DEXLVL,
              HIRELING_AR,
              HIRELING_ARLVL,
              HIRELING_SHARE,
              HIRELING_DMGMIN,
              HIRELING_DMGMAX,
              HIRELING_DMGLVL,
              HIRELING_RESIST,
              HIRELING_RESISTLVL,
              HIRELING_WTYPE1,
              HIRELING_WTYPE2,
              HIRELING_HIREDESC,
              HIRELING_DEFAULTCHANCE,
              HIRELING_SKILL1,
              HIRELING_MODE1,
              HIRELING_CHANCE1,
              HIRELING_CHANCEPERLVL1,
              HIRELING_LEVEL1,
              HIRELING_LVLPERLVL1,
              HIRELING_SKILL2,
              HIRELING_MODE2,
              HIRELING_CHANCE2,
              HIRELING_CHANCEPERLVL2,
              HIRELING_LEVEL2,
              HIRELING_LVLPERLVL2,
              HIRELING_SKILL3,
              HIRELING_MODE3,
              HIRELING_CHANCE3,
              HIRELING_CHANCEPERLVL3,
              HIRELING_LEVEL3,
              HIRELING_LVLPERLVL3,
              HIRELING_SKILL4,
              HIRELING_MODE4,
              HIRELING_CHANCE4,
              HIRELING_CHANCEPERLVL4,
              HIRELING_LEVEL4,
              HIRELING_LVLPERLVL4,
              HIRELING_SKILL5,
              HIRELING_MODE5,
              HIRELING_CHANCE5,
              HIRELING_CHANCEPERLVL5,
              HIRELING_LEVEL5,
              HIRELING_LVLPERLVL5,
              HIRELING_SKILL6,
              HIRELING_MODE6,
              HIRELING_CHANCE6,
              HIRELING_CHANCEPERLVL6,
              HIRELING_LEVEL6,
              HIRELING_LVLPERLVL6,
              HIRELING_HEAD,
              HIRELING_TORSO,
              HIRELING_WEAPON,
              HIRELING_SHIELD,
              HIRELING_COL_MAX
} HIRELING_COL_ENUM;

// HitClass.txt
typedef enum {HITCLASS_HITCLASS,
              HITCLASS_CODE,
              HITCLASS_COL_MAX
} HITCLASS_COL_ENUM;

// Inventory.txt
typedef enum {INVENTORY_CLASS,
              INVENTORY_INVLEFT,
              INVENTORY_INVRIGHT,
              INVENTORY_INVTOP,
              INVENTORY_INVBOTTOM,
              INVENTORY_GRIDX,
              INVENTORY_GRIDY,
              INVENTORY_GRIDLEFT,
              INVENTORY_GRIDRIGHT,
              INVENTORY_GRIDTOP,
              INVENTORY_GRIDBOTTOM,
              INVENTORY_GRIDBOXWIDTH,
              INVENTORY_GRIDBOXHEIGHT,
              INVENTORY_RARMLEFT,
              INVENTORY_RARMRIGHT,
              INVENTORY_RARMTOP,
              INVENTORY_RARMBOTTOM,
              INVENTORY_RARMWIDTH,
              INVENTORY_RARMHEIGHT,
              INVENTORY_TORSOLEFT,
              INVENTORY_TORSORIGHT,
              INVENTORY_TORSOTOP,
              INVENTORY_TORSOBOTTOM,
              INVENTORY_TORSOWIDTH,
              INVENTORY_TORSOHEIGHT,
              INVENTORY_LARMLEFT,
              INVENTORY_LARMRIGHT,
              INVENTORY_LARMTOP,
              INVENTORY_LARMBOTTOM,
              INVENTORY_LARMWIDTH,
              INVENTORY_LARMHEIGHT,
              INVENTORY_HEADLEFT,
              INVENTORY_HEADRIGHT,
              INVENTORY_HEADTOP,
              INVENTORY_HEADBOTTOM,
              INVENTORY_HEADWIDTH,
              INVENTORY_HEADHEIGHT,
              INVENTORY_NECKLEFT,
              INVENTORY_NECKRIGHT,
              INVENTORY_NECKTOP,
              INVENTORY_NECKBOTTOM,
              INVENTORY_NECKWIDTH,
              INVENTORY_NECKHEIGHT,
              INVENTORY_RHANDLEFT,
              INVENTORY_RHANDRIGHT,
              INVENTORY_RHANDTOP,
              INVENTORY_RHANDBOTTOM,
              INVENTORY_RHANDWIDTH,
              INVENTORY_RHANDHEIGHT,
              INVENTORY_LHANDLEFT,
              INVENTORY_LHANDRIGHT,
              INVENTORY_LHANDTOP,
              INVENTORY_LHANDBOTTOM,
              INVENTORY_LHANDWIDTH,
              INVENTORY_LHANDHEIGHT,
              INVENTORY_BELTLEFT,
              INVENTORY_BELTRIGHT,
              INVENTORY_BELTTOP,
              INVENTORY_BELTBOTTOM,
              INVENTORY_BELTWIDTH,
              INVENTORY_BELTHEIGHT,
              INVENTORY_FEETLEFT,
              INVENTORY_FEETRIGHT,
              INVENTORY_FEETTOP,
              INVENTORY_FEETBOTTOM,
              INVENTORY_FEETWIDTH,
              INVENTORY_FEETHEIGHT,
              INVENTORY_GLOVESLEFT,
              INVENTORY_GLOVESRIGHT,
              INVENTORY_GLOVESTOP,
              INVENTORY_GLOVESBOTTOM,
              INVENTORY_GLOVESWIDTH,
              INVENTORY_GLOVESHEIGHT,
              INVENTORY_COL_MAX
} INVENTORY_COL_ENUM;

// ItemRatio.txt
typedef enum {ITEMRATIO_FUNCTION,
              ITEMRATIO_VERSION,
              ITEMRATIO_UBER,
              ITEMRATIO_CLASSSPECIFIC,
              ITEMRATIO_UNIQUE,
              ITEMRATIO_UNIQUEDIVISOR,
              ITEMRATIO_UNIQUEMIN,
              ITEMRATIO_RARE,
              ITEMRATIO_RAREDIVISOR,
              ITEMRATIO_RAREMIN,
              ITEMRATIO_SET,
              ITEMRATIO_SETDIVISOR,
              ITEMRATIO_SETMIN,
              ITEMRATIO_MAGIC,
              ITEMRATIO_MAGICDIVISOR,
              ITEMRATIO_MAGICMIN,
              ITEMRATIO_HIQUALITY,
              ITEMRATIO_HIQUALITYDIVISOR,
              ITEMRATIO_NORMAL,
              ITEMRATIO_NORMALDIVISOR,
              ITEMRATIO_COL_MAX
} ITEMRATIO_COL_ENUM;

// ItemStatCost.txt
typedef enum {ITEMSTATCOST_STAT,
              ITEMSTATCOST_ID,
              ITEMSTATCOST_SENDOTHER,
              ITEMSTATCOST_SIGNED,
              ITEMSTATCOST_SENDBITS,
              ITEMSTATCOST_SENDPARAMBITS,
              ITEMSTATCOST_UPDATEANIMRATE,
              ITEMSTATCOST_SAVED,
              ITEMSTATCOST_CSVSIGNED,
              ITEMSTATCOST_CSVBITS,
              ITEMSTATCOST_CSVPARAM,
              ITEMSTATCOST_FCALLBACK,
              ITEMSTATCOST_FMIN,
              ITEMSTATCOST_MINACCR,
              ITEMSTATCOST_ENCODE,
              ITEMSTATCOST_ADD,
              ITEMSTATCOST_MULTIPLY,
              ITEMSTATCOST_DIVIDE,
              ITEMSTATCOST_VALSHIFT,
              ITEMSTATCOST_109SAVEBITS,
              ITEMSTATCOST_109SAVEADD,
              ITEMSTATCOST_SAVEBITS,
              ITEMSTATCOST_SAVEADD,
              ITEMSTATCOST_SAVEPARAMBITS,
              ITEMSTATCOST_KEEPZERO,
              ITEMSTATCOST_OP,
              ITEMSTATCOST_OPPARAM,
              ITEMSTATCOST_OPBASE,
              ITEMSTATCOST_OPSTAT1,
              ITEMSTATCOST_OPSTAT2,
              ITEMSTATCOST_OPSTAT3,
              ITEMSTATCOST_DIRECT,
              ITEMSTATCOST_MAXSTAT,
              ITEMSTATCOST_ITEMSPECIFIC,
              ITEMSTATCOST_DAMAGERELATED,
              ITEMSTATCOST_ITEMEVENT1,
              ITEMSTATCOST_ITEMEVENTFUNC1,
              ITEMSTATCOST_ITEMEVENT2,
              ITEMSTATCOST_ITEMEVENTFUNC2,
              ITEMSTATCOST_DESCPRIORITY,
              ITEMSTATCOST_DESCFUNC,
              ITEMSTATCOST_DESCVAL,
              ITEMSTATCOST_DESCSTRPOS,
              ITEMSTATCOST_DESCSTRNEG,
              ITEMSTATCOST_DESCSTR2,
              ITEMSTATCOST_DGRP,
              ITEMSTATCOST_DGRPFUNC,
              ITEMSTATCOST_DGRPVAL,
              ITEMSTATCOST_DGRPSTRPOS,
              ITEMSTATCOST_DGRPSTRNEG,
              ITEMSTATCOST_DGRPSTR2,
              ITEMSTATCOST_STUFF,
              ITEMSTATCOST_COL_MAX
} ITEMSTATCOST_COL_ENUM;

// ItemTypes.txt
typedef enum {ITEMTYPES_ITEMTYPE,
              ITEMTYPES_CODE,
              ITEMTYPES_EQUIV1,
              ITEMTYPES_EQUIV2,
              ITEMTYPES_REPAIR,
              ITEMTYPES_BODY,
              ITEMTYPES_BODYLOC1,
              ITEMTYPES_BODYLOC2,
              ITEMTYPES_SHOOTS,
              ITEMTYPES_QUIVER,
              ITEMTYPES_THROWABLE,
              ITEMTYPES_RELOAD,
              ITEMTYPES_REEQUIP,
              ITEMTYPES_AUTOSTACK,
              ITEMTYPES_MAGIC,
              ITEMTYPES_RARE,
              ITEMTYPES_NORMAL,
              ITEMTYPES_CHARM,
              ITEMTYPES_GEM,
              ITEMTYPES_BELTABLE,
              ITEMTYPES_MAXSOCK1,
              ITEMTYPES_MAXSOCK25,
              ITEMTYPES_MAXSOCK40,
              ITEMTYPES_TREASURECLASS,
              ITEMTYPES_RARITY,
              ITEMTYPES_STAFFMODS,
              ITEMTYPES_COSTFORMULA,
              ITEMTYPES_CLASS,
              ITEMTYPES_VARINVGFX,
              ITEMTYPES_INVGFX1,
              ITEMTYPES_INVGFX2,
              ITEMTYPES_INVGFX3,
              ITEMTYPES_INVGFX4,
              ITEMTYPES_INVGFX5,
              ITEMTYPES_INVGFX6,
              ITEMTYPES_STOREPAGE,
              ITEMTYPES_COL_MAX
} ITEMTYPES_COL_ENUM;

// Levels.txt
typedef enum {LEVELS_NAME,
              LEVELS_ID,
              LEVELS_PAL,
              LEVELS_ACT,
              LEVELS_QUESTFLAG,
              LEVELS_QUESTFLAGEX,
              LEVELS_LAYER,
              LEVELS_SIZEX,
              LEVELS_SIZEY,
              LEVELS_SIZEXN,
              LEVELS_SIZEYN,
              LEVELS_SIZEXH,
              LEVELS_SIZEYH,
              LEVELS_OFFSETX,
              LEVELS_OFFSETY,
              LEVELS_DEPEND,
              LEVELS_TELEPORT,
              LEVELS_RAIN,
              LEVELS_MUD,
              LEVELS_NOPER,
              LEVELS_LOSDRAW,
              LEVELS_FLOORFILTER,
              LEVELS_BLANKSCREEN,
              LEVELS_DRAWEDGES,
              LEVELS_ISINSIDE,
              LEVELS_DRLGTYPE,
              LEVELS_LEVELTYPE,
              LEVELS_SUBTYPE,
              LEVELS_SUBTHEME,
              LEVELS_SUBWAYPOINT,
              LEVELS_SUBSHRINE,
              LEVELS_VIS0,
              LEVELS_VIS1,
              LEVELS_VIS2,
              LEVELS_VIS3,
              LEVELS_VIS4,
              LEVELS_VIS5,
              LEVELS_VIS6,
              LEVELS_VIS7,
              LEVELS_WARP0,
              LEVELS_WARP1,
              LEVELS_WARP2,
              LEVELS_WARP3,
              LEVELS_WARP4,
              LEVELS_WARP5,
              LEVELS_WARP6,
              LEVELS_WARP7,
              LEVELS_INTENSITY,
              LEVELS_RED,
              LEVELS_GREEN,
              LEVELS_BLUE,
              LEVELS_PORTAL,
              LEVELS_POSITION,
              LEVELS_SAVEMONSTERS,
              LEVELS_QUEST,
              LEVELS_WARPDIST,
              LEVELS_MONLVL1,
              LEVELS_MONLVL2,
              LEVELS_MONLVL3,
              LEVELS_MONLVL1EX,
              LEVELS_MONLVL2EX,
              LEVELS_MONLVL3EX,
              LEVELS_MONDEN,
              LEVELS_MONDENN,
              LEVELS_MONDENH,
              LEVELS_MONUMIN,
              LEVELS_MONUMAX,
              LEVELS_MONUMINN,
              LEVELS_MONUMAXN,
              LEVELS_MONUMINH,
              LEVELS_MONUMAXH,
              LEVELS_MONWNDR,
              LEVELS_MONSPCWALK,
              LEVELS_NUMMON,
              LEVELS_MON1,
              LEVELS_MON2,
              LEVELS_MON3,
              LEVELS_MON4,
              LEVELS_MON5,
              LEVELS_MON6,
              LEVELS_MON7,
              LEVELS_MON8,
              LEVELS_MON9,
              LEVELS_MON10,
              LEVELS_MON11,
              LEVELS_MON12,
              LEVELS_MON13,
              LEVELS_MON14,
              LEVELS_MON15,
              LEVELS_MON16,
              LEVELS_MON17,
              LEVELS_MON18,
              LEVELS_MON19,
              LEVELS_MON20,
              LEVELS_MON21,
              LEVELS_MON22,
              LEVELS_MON23,
              LEVELS_MON24,
              LEVELS_MON25,
              LEVELS_RANGEDSPAWN,
              LEVELS_NMON1,
              LEVELS_NMON2,
              LEVELS_NMON3,
              LEVELS_NMON4,
              LEVELS_NMON5,
              LEVELS_NMON6,
              LEVELS_NMON7,
              LEVELS_NMON8,
              LEVELS_NMON9,
              LEVELS_NMON10,
              LEVELS_NMON11,
              LEVELS_NMON12,
              LEVELS_NMON13,
              LEVELS_NMON14,
              LEVELS_NMON15,
              LEVELS_NMON16,
              LEVELS_NMON17,
              LEVELS_NMON18,
              LEVELS_NMON19,
              LEVELS_NMON20,
              LEVELS_NMON21,
              LEVELS_NMON22,
              LEVELS_NMON23,
              LEVELS_NMON24,
              LEVELS_NMON25,
              LEVELS_UMON1,
              LEVELS_UMON2,
              LEVELS_UMON3,
              LEVELS_UMON4,
              LEVELS_UMON5,
              LEVELS_UMON6,
              LEVELS_UMON7,
              LEVELS_UMON8,
              LEVELS_UMON9,
              LEVELS_UMON10,
              LEVELS_UMON11,
              LEVELS_UMON12,
              LEVELS_UMON13,
              LEVELS_UMON14,
              LEVELS_UMON15,
              LEVELS_UMON16,
              LEVELS_UMON17,
              LEVELS_UMON18,
              LEVELS_UMON19,
              LEVELS_UMON20,
              LEVELS_UMON21,
              LEVELS_UMON22,
              LEVELS_UMON23,
              LEVELS_UMON24,
              LEVELS_UMON25,
              LEVELS_CMON1,
              LEVELS_CMON2,
              LEVELS_CMON3,
              LEVELS_CMON4,
              LEVELS_CPCT1,
              LEVELS_CPCT2,
              LEVELS_CPCT3,
              LEVELS_CPCT4,
              LEVELS_CAMT1,
              LEVELS_CAMT2,
              LEVELS_CAMT3,
              LEVELS_CAMT4,
              LEVELS_THEMES,
              LEVELS_SOUNDENV,
              LEVELS_WAYPOINT,
              LEVELS_LEVELNAME,
              LEVELS_LEVELWARP,
              LEVELS_ENTRYFILE,
              LEVELS_OBJGRP0,
              LEVELS_OBJGRP1,
              LEVELS_OBJGRP2,
              LEVELS_OBJGRP3,
              LEVELS_OBJGRP4,
              LEVELS_OBJGRP5,
              LEVELS_OBJGRP6,
              LEVELS_OBJGRP7,
              LEVELS_OBJPRB0,
              LEVELS_OBJPRB1,
              LEVELS_OBJPRB2,
              LEVELS_OBJPRB3,
              LEVELS_OBJPRB4,
              LEVELS_OBJPRB5,
              LEVELS_OBJPRB6,
              LEVELS_OBJPRB7,
              LEVELS_BETA,
              LEVELS_COL_MAX
} LEVELS_COL_ENUM;

// LowQualityItems.txt
typedef enum {LOWQUALITYITEMS_NAME,
              LOWQUALITYITEMS_COL_MAX
} LOWQUALITYITEMS_COL_ENUM;

// LvlMaze.txt
typedef enum {LVLMAZE_NAME,
              LVLMAZE_LEVEL,
              LVLMAZE_ROOMS,
              LVLMAZE_ROOMSN,
              LVLMAZE_ROOMSH,
              LVLMAZE_SIZEX,
              LVLMAZE_SIZEY,
              LVLMAZE_MERGE,
              LVLMAZE_BETA,
              LVLMAZE_COL_MAX
} LVLMAZE_COL_ENUM;

// LvlPrest.txt
typedef enum {LVLPREST_NAME,
              LVLPREST_DEF,
              LVLPREST_LEVELID,
              LVLPREST_POPULATE,
              LVLPREST_LOGICALS,
              LVLPREST_OUTDOORS,
              LVLPREST_ANIMATE,
              LVLPREST_KILLEDGE,
              LVLPREST_FILLBLANKS,
              LVLPREST_SIZEX,
              LVLPREST_SIZEY,
              LVLPREST_AUTOMAP,
              LVLPREST_SCAN,
              LVLPREST_POPS,
              LVLPREST_POPPAD,
              LVLPREST_FILES,
              LVLPREST_FILE1,
              LVLPREST_FILE2,
              LVLPREST_FILE3,
              LVLPREST_FILE4,
              LVLPREST_FILE5,
              LVLPREST_FILE6,
              LVLPREST_DT1MASK,
              LVLPREST_BETA,
              LVLPREST_EXPANSION,
              LVLPREST_COL_MAX
} LVLPREST_COL_ENUM;

// LvlSub.txt
typedef enum {LVLSUB_NAME,
              LVLSUB_TYPE,
              LVLSUB_FILE,
              LVLSUB_EXPANSION,
              LVLSUB_CHECKALL,
              LVLSUB_BORDTYPE,
              LVLSUB_GRIDSIZE,
              LVLSUB_DT1MASK,
              LVLSUB_PROB0,
              LVLSUB_TRIALS0,
              LVLSUB_MAX0,
              LVLSUB_PROB1,
              LVLSUB_TRIALS1,
              LVLSUB_MAX1,
              LVLSUB_PROB2,
              LVLSUB_TRIALS2,
              LVLSUB_MAX2,
              LVLSUB_PROB3,
              LVLSUB_TRIALS3,
              LVLSUB_MAX3,
              LVLSUB_PROB4,
              LVLSUB_TRIALS4,
              LVLSUB_MAX4,
              LVLSUB_BETA,
              LVLSUB_COL_MAX
} LVLSUB_COL_ENUM;

// LvlTypes.txt
typedef enum {LVLTYPES_NAME,
              LVLTYPES_ID,
              LVLTYPES_FILE1,
              LVLTYPES_FILE2,
              LVLTYPES_FILE3,
              LVLTYPES_FILE4,
              LVLTYPES_FILE5,
              LVLTYPES_FILE6,
              LVLTYPES_FILE7,
              LVLTYPES_FILE8,
              LVLTYPES_FILE9,
              LVLTYPES_FILE10,
              LVLTYPES_FILE11,
              LVLTYPES_FILE12,
              LVLTYPES_FILE13,
              LVLTYPES_FILE14,
              LVLTYPES_FILE15,
              LVLTYPES_FILE16,
              LVLTYPES_FILE17,
              LVLTYPES_FILE18,
              LVLTYPES_FILE19,
              LVLTYPES_FILE20,
              LVLTYPES_FILE21,
              LVLTYPES_FILE22,
              LVLTYPES_FILE23,
              LVLTYPES_FILE24,
              LVLTYPES_FILE25,
              LVLTYPES_FILE26,
              LVLTYPES_FILE27,
              LVLTYPES_FILE28,
              LVLTYPES_FILE29,
              LVLTYPES_FILE30,
              LVLTYPES_FILE31,
              LVLTYPES_FILE32,
              LVLTYPES_BETA,
              LVLTYPES_ACT,
              LVLTYPES_EXPANSION,
              LVLTYPES_COL_MAX
} LVLTYPES_COL_ENUM;

// LvlWarp.txt
typedef enum {LVLWARP_NAME,
              LVLWARP_ID,
              LVLWARP_SELECTX,
              LVLWARP_SELECTY,
              LVLWARP_SELECTDX,
              LVLWARP_SELECTDY,
              LVLWARP_EXITWALKX,
              LVLWARP_EXITWALKY,
              LVLWARP_OFFSETX,
              LVLWARP_OFFSETY,
              LVLWARP_LITVERSION,
              LVLWARP_TILES,
              LVLWARP_DIRECTION,
              LVLWARP_BETA,
              LVLWARP_COL_MAX
} LVLWARP_COL_ENUM;

// MagicPrefix.txt + MagicSuffix
typedef enum {MAGICAFFIX_NAME,
              MAGICAFFIX_VERSION,
              MAGICAFFIX_SPAWNABLE,
              MAGICAFFIX_RARE,
              MAGICAFFIX_LEVEL,
              MAGICAFFIX_MAXLEVEL,
              MAGICAFFIX_LEVELREQ,
              MAGICAFFIX_CLASSSPECIFIC,
              MAGICAFFIX_CLASS,
              MAGICAFFIX_CLASSLEVELREQ,
              MAGICAFFIX_FREQUENCY,
              MAGICAFFIX_GROUP,
              MAGICAFFIX_MOD1CODE,
              MAGICAFFIX_MOD1PARAM,
              MAGICAFFIX_MOD1MIN,
              MAGICAFFIX_MOD1MAX,
              MAGICAFFIX_MOD2CODE,
              MAGICAFFIX_MOD2PARAM,
              MAGICAFFIX_MOD2MIN,
              MAGICAFFIX_MOD2MAX,
              MAGICAFFIX_MOD3CODE,
              MAGICAFFIX_MOD3PARAM,
              MAGICAFFIX_MOD3MIN,
              MAGICAFFIX_MOD3MAX,
              MAGICAFFIX_TRANSFORM,
              MAGICAFFIX_TRANSFORMCOLOR,
              MAGICAFFIX_ITYPE1,
              MAGICAFFIX_ITYPE2,
              MAGICAFFIX_ITYPE3,
              MAGICAFFIX_ITYPE4,
              MAGICAFFIX_ITYPE5,
              MAGICAFFIX_ITYPE6,
              MAGICAFFIX_ITYPE7,
              MAGICAFFIX_ETYPE1,
              MAGICAFFIX_ETYPE2,
              MAGICAFFIX_ETYPE3,
              MAGICAFFIX_ETYPE4,
              MAGICAFFIX_ETYPE5,
              MAGICAFFIX_DIVIDE,
              MAGICAFFIX_MULTIPLY,
              MAGICAFFIX_ADD,
              MAGICAFFIX_COL_MAX
} MAGICAFFIX_COL_ENUM;

// MissCalc.txt
typedef enum {MISSCALC_CODE,
              MISSCALC_COL_MAX
} MISSCALC_COL_ENUM;

// Missiles.txt
typedef enum {MISSILES_MISSILE,
              MISSILES_ID,
              MISSILES_PCLTDOFUNC,
              MISSILES_PCLTHITFUNC,
              MISSILES_PSRVDOFUNC,
              MISSILES_PSRVHITFUNC,
              MISSILES_PSRVDMGFUNC,
              MISSILES_SRVCALC1,
              MISSILES_PARAM1,
              MISSILES_PARAM2,
              MISSILES_PARAM3,
              MISSILES_PARAM4,
              MISSILES_PARAM5,
              MISSILES_CLTCALC1,
              MISSILES_CLTPARAM1,
              MISSILES_CLTPARAM2,
              MISSILES_CLTPARAM3,
              MISSILES_CLTPARAM4,
              MISSILES_CLTPARAM5,
              MISSILES_SHITCALC1,
              MISSILES_SHITPAR1,
              MISSILES_SHITPAR2,
              MISSILES_SHITPAR3,
              MISSILES_CHITCALC1,
              MISSILES_CHITPAR1,
              MISSILES_CHITPAR2,
              MISSILES_CHITPAR3,
              MISSILES_DMGCALC1,
              MISSILES_DPARAM1,
              MISSILES_DPARAM2,
              MISSILES_VEL,
              MISSILES_MAXVEL,
              MISSILES_VELLEV,
              MISSILES_ACCEL,
              MISSILES_RANGE,
              MISSILES_LEVRANGE,
              MISSILES_LIGHT,
              MISSILES_FLICKER,
              MISSILES_RED,
              MISSILES_GREEN,
              MISSILES_BLUE,
              MISSILES_INITSTEPS,
              MISSILES_ACTIVATE,
              MISSILES_LOOPANIM,
              MISSILES_CELFILE,
              MISSILES_ANIMRATE,
              MISSILES_ANIMLEN,
              MISSILES_ANIMSPEED,
              MISSILES_RANDSTART,
              MISSILES_SUBLOOP,
              MISSILES_SUBSTART,
              MISSILES_SUBSTOP,
              MISSILES_COLLIDETYPE,
              MISSILES_COLLIDEKILL,
              MISSILES_COLLIDEFRIEND,
              MISSILES_LASTCOLLIDE,
              MISSILES_COLLISION,
              MISSILES_CLIENTCOL,
              MISSILES_CLIENTSEND,
              MISSILES_NEXTHIT,
              MISSILES_NEXTDELAY,
              MISSILES_XOFFSET,
              MISSILES_YOFFSET,
              MISSILES_ZOFFSET,
              MISSILES_SIZE,
              MISSILES_SRCTOWN,
              MISSILES_CLTSRCTOWN,
              MISSILES_CANDESTROY,
              MISSILES_TOHIT,
              MISSILES_ALWAYSEXPLODE,
              MISSILES_EXPLOSION,
              MISSILES_TOWN,
              MISSILES_NOUNIQUEMOD,
              MISSILES_NOMULTISHOT,
              MISSILES_HOLY,
              MISSILES_CANSLOW,
              MISSILES_RETURNFIRE,
              MISSILES_GETHIT,
              MISSILES_SOFTHIT,
              MISSILES_KNOCKBACK,
              MISSILES_TRANS,
              MISSILES_QTY,
              MISSILES_PIERCE,
              MISSILES_SPECIALSETUP,
              MISSILES_MISSILESKILL,
              MISSILES_SKILL,
              MISSILES_RESULTFLAGS,
              MISSILES_HITFLAGS,
              MISSILES_HITSHIFT,
              MISSILES_APPLYMASTERY,
              MISSILES_SRCDAMAGE,
              MISSILES_HALF2HSRC,
              MISSILES_SRCMISSDMG,
              MISSILES_MINDAMAGE,
              MISSILES_MINLEVDAM1,
              MISSILES_MINLEVDAM2,
              MISSILES_MINLEVDAM3,
              MISSILES_MINLEVDAM4,
              MISSILES_MINLEVDAM5,
              MISSILES_MAXDAMAGE,
              MISSILES_MAXLEVDAM1,
              MISSILES_MAXLEVDAM2,
              MISSILES_MAXLEVDAM3,
              MISSILES_MAXLEVDAM4,
              MISSILES_MAXLEVDAM5,
              MISSILES_DMGSYMPERCALC,
              MISSILES_ETYPE,
              MISSILES_EMIN,
              MISSILES_MINELEV1,
              MISSILES_MINELEV2,
              MISSILES_MINELEV3,
              MISSILES_MINELEV4,
              MISSILES_MINELEV5,
              MISSILES_EMAX,
              MISSILES_MAXELEV1,
              MISSILES_MAXELEV2,
              MISSILES_MAXELEV3,
              MISSILES_MAXELEV4,
              MISSILES_MAXELEV5,
              MISSILES_EDMGSYMPERCALC,
              MISSILES_ELEN,
              MISSILES_ELEVLEN1,
              MISSILES_ELEVLEN2,
              MISSILES_ELEVLEN3,
              MISSILES_HITCLASS,
              MISSILES_NUMDIRECTIONS,
              MISSILES_LOCALBLOOD,
              MISSILES_DAMAGERATE,
              MISSILES_TRAVELSOUND,
              MISSILES_HITSOUND,
              MISSILES_PROGSOUND,
              MISSILES_PROGOVERLAY,
              MISSILES_EXPLOSIONMISSILE,
              MISSILES_SUBMISSILE1,
              MISSILES_SUBMISSILE2,
              MISSILES_SUBMISSILE3,
              MISSILES_HITSUBMISSILE1,
              MISSILES_HITSUBMISSILE2,
              MISSILES_HITSUBMISSILE3,
              MISSILES_HITSUBMISSILE4,
              MISSILES_CLTSUBMISSILE1,
              MISSILES_CLTSUBMISSILE2,
              MISSILES_CLTSUBMISSILE3,
              MISSILES_CLTHITSUBMISSILE1,
              MISSILES_CLTHITSUBMISSILE2,
              MISSILES_CLTHITSUBMISSILE3,
              MISSILES_CLTHITSUBMISSILE4,
              MISSILES_COL_MAX
} MISSILES_COL_ENUM;

// MonAI.txt
typedef enum {MONAI_AI,
              MONAI_COL_MAX
} MONAI_COL_ENUM;

// MonEquip.txt
typedef enum {MONEQUIP_MONSTER,
              MONEQUIP_ONINIT,
              MONEQUIP_LEVEL,
              MONEQUIP_ITEM1,
              MONEQUIP_LOC1,
              MONEQUIP_MOD1,
              MONEQUIP_ITEM2,
              MONEQUIP_LOC2,
              MONEQUIP_MOD2,
              MONEQUIP_ITEM3,
              MONEQUIP_LOC3,
              MONEQUIP_MOD3,
              MONEQUIP_COL_MAX
} MONEQUIP_COL_ENUM;

// MonLvl.txt
typedef enum {MONLVL_LEVEL,
              MONLVL_AC,
              MONLVL_ACN,
              MONLVL_ACH,
              MONLVL_LAC,
              MONLVL_LACN,
              MONLVL_LACH,
              MONLVL_TH,
              MONLVL_THN,
              MONLVL_THH,
              MONLVL_LTH,
              MONLVL_LTHN,
              MONLVL_LTHH,
              MONLVL_HP,
              MONLVL_HPN,
              MONLVL_HPH,
              MONLVL_LHP,
              MONLVL_LHPN,
              MONLVL_LHPH,
              MONLVL_DM,
              MONLVL_DMN,
              MONLVL_DMH,
              MONLVL_LDM,
              MONLVL_LDMN,
              MONLVL_LDMH,
              MONLVL_XP,
              MONLVL_XPN,
              MONLVL_XPH,
              MONLVL_LXP,
              MONLVL_LXPN,
              MONLVL_LXPH,
              MONLVL_COL_MAX
} MONLVL_COL_ENUM;

// MonMode.txt
typedef enum {MONMODE_NAME,
              MONMODE_TOKEN,
              MONMODE_CODE,
              MONMODE_COL_MAX
} MONMODE_COL_ENUM;

// MonName.txt
typedef enum {MONNAME_MONNAME,
              MONNAME_COL_MAX
} MONNAME_COL_ENUM;

// MonPlace.txt
typedef enum {MONPLACE_CODE,
              MONPLACE_COL_MAX
} MONPLACE_COL_ENUM;

// MonPreset.txt
typedef enum {MONPRESET_ACT,
              MONPRESET_PLACE,
              MONPRESET_COL_MAX
} MONPRESET_COL_ENUM;


// MonSeq.txt
typedef enum {MONSEQ_SEQUENCE,
              MONSEQ_MODE,
              MONSEQ_FRAME,
              MONSEQ_DIR,
              MONSEQ_EVENT,
              MONSEQ_COL_MAX
} MONSEQ_COL_ENUM;

// MonProp.txt
typedef enum {MONPROP_ID,
              MONPROP_PROP1,
              MONPROP_CHANCE1,
              MONPROP_PAR1,
              MONPROP_MIN1,
              MONPROP_MAX1,
              MONPROP_PROP2,
              MONPROP_CHANCE2,
              MONPROP_PAR2,
              MONPROP_MIN2,
              MONPROP_MAX2,
              MONPROP_PROP3,
              MONPROP_CHANCE3,
              MONPROP_PAR3,
              MONPROP_MIN3,
              MONPROP_MAX3,
              MONPROP_PROP4,
              MONPROP_CHANCE4,
              MONPROP_PAR4,
              MONPROP_MIN4,
              MONPROP_MAX4,
              MONPROP_PROP5,
              MONPROP_CHANCE5,
              MONPROP_PAR5,
              MONPROP_MIN5,
              MONPROP_MAX5,
              MONPROP_PROP6,
              MONPROP_CHANCE6,
              MONPROP_PAR6,
              MONPROP_MIN6,
              MONPROP_MAX6,
              MONPROP_PROP1N,
              MONPROP_CHANCE1N,
              MONPROP_PAR1N,
              MONPROP_MIN1N,
              MONPROP_MAX1N,
              MONPROP_PROP2N,
              MONPROP_CHANCE2N,
              MONPROP_PAR2N,
              MONPROP_MIN2N,
              MONPROP_MAX2N,
              MONPROP_PROP3N,
              MONPROP_CHANCE3N,
              MONPROP_PAR3N,
              MONPROP_MIN3N,
              MONPROP_MAX3N,
              MONPROP_PROP4N,
              MONPROP_CHANCE4N,
              MONPROP_PAR4N,
              MONPROP_MIN4N,
              MONPROP_MAX4N,
              MONPROP_PROP5N,
              MONPROP_CHANCE5N,
              MONPROP_PAR5N,
              MONPROP_MIN5N,
              MONPROP_MAX5N,
              MONPROP_PROP6N,
              MONPROP_CHANCE6N,
              MONPROP_PAR6N,
              MONPROP_MIN6N,
              MONPROP_MAX6N,
              MONPROP_PROP1H,
              MONPROP_CHANCE1H,
              MONPROP_PAR1H,
              MONPROP_MIN1H,
              MONPROP_MAX1H,
              MONPROP_PROP2H,
              MONPROP_CHANCE2H,
              MONPROP_PAR2H,
              MONPROP_MIN2H,
              MONPROP_MAX2H,
              MONPROP_PROP3H,
              MONPROP_CHANCE3H,
              MONPROP_PAR3H,
              MONPROP_MIN3H,
              MONPROP_MAX3H,
              MONPROP_PROP4H,
              MONPROP_CHANCE4H,
              MONPROP_PAR4H,
              MONPROP_MIN4H,
              MONPROP_MAX4H,
              MONPROP_PROP5H,
              MONPROP_CHANCE5H,
              MONPROP_PAR5H,
              MONPROP_MIN5H,
              MONPROP_MAX5H,
              MONPROP_PROP6H,
              MONPROP_CHANCE6H,
              MONPROP_PAR6H,
              MONPROP_MIN6H,
              MONPROP_MAX6H,
              MONPROP_COL_MAX
} MONPROP_COL_ENUM;

// MonSounds.txt
typedef enum {MONSOUNDS_ID,
              MONSOUNDS_ATTACK1,
              MONSOUNDS_WEAPON1,
              MONSOUNDS_ATT1DEL,
              MONSOUNDS_WEA1DEL,
              MONSOUNDS_ATT1PRB,
              MONSOUNDS_WEA1VOL,
              MONSOUNDS_ATTACK2,
              MONSOUNDS_WEAPON2,
              MONSOUNDS_ATT2DEL,
              MONSOUNDS_WEA2DEL,
              MONSOUNDS_ATT2PRB,
              MONSOUNDS_WEA2VOL,
              MONSOUNDS_HITSOUND,
              MONSOUNDS_DEATHSOUND,
              MONSOUNDS_HITDELAY,
              MONSOUNDS_DEADELAY,
              MONSOUNDS_SKILL1,
              MONSOUNDS_SKILL2,
              MONSOUNDS_SKILL3,
              MONSOUNDS_SKILL4,
              MONSOUNDS_FOOTSTEP,
              MONSOUNDS_FOOTSTEPLAYER,
              MONSOUNDS_FSCNT,
              MONSOUNDS_FSOFF,
              MONSOUNDS_FSPRB,
              MONSOUNDS_NEUTRAL,
              MONSOUNDS_NEUTIME,
              MONSOUNDS_INIT,
              MONSOUNDS_TAUNT,
              MONSOUNDS_FLEE,
              MONSOUNDS_CVTMO1,
              MONSOUNDS_CVTSK1,
              MONSOUNDS_CVTTGT1,
              MONSOUNDS_CVTMO2,
              MONSOUNDS_CVTSK2,
              MONSOUNDS_CVTTGT2,
              MONSOUNDS_CVTMO3,
              MONSOUNDS_CVTSK3,
              MONSOUNDS_CVTTGT3,
              MONSOUNDS_COL_MAX
} MONSOUNDS_COL_ENUM;

// MonStats.txt
typedef enum {MONSTATS_ID,
              MONSTATS_HCIDX,
              MONSTATS_BASEID,
              MONSTATS_NEXTINCLASS,
              MONSTATS_TRANSLVL,
              MONSTATS_NAMESTR,
              MONSTATS_MONSTATSEX,
              MONSTATS_MONPROP,
              MONSTATS_MONTYPE,
              MONSTATS_AI,
              MONSTATS_DESCSTR,
              MONSTATS_CODE,
              MONSTATS_ENABLED,
              MONSTATS_RANGEDTYPE,
              MONSTATS_PLACESPAWN,
              MONSTATS_SPAWN,
              MONSTATS_SPAWNX,
              MONSTATS_SPAWNY,
              MONSTATS_SPAWNMODE,
              MONSTATS_MINION1,
              MONSTATS_MINION2,
              MONSTATS_SETBOSS,
              MONSTATS_BOSSXFER,
              MONSTATS_PARTYMIN,
              MONSTATS_PARTYMAX,
              MONSTATS_MINGRP,
              MONSTATS_MAXGRP,
              MONSTATS_SPARSEPOPULATE,
              MONSTATS_VELOCITY,
              MONSTATS_RUN,
              MONSTATS_RARITY,
              MONSTATS_LEVEL,
              MONSTATS_LEVELN,
              MONSTATS_LEVELH,
              MONSTATS_MONSOUND,
              MONSTATS_UMONSOUND,
              MONSTATS_THREAT,
              MONSTATS_AIDEL,
              MONSTATS_AIDELN,
              MONSTATS_AIDELH,
              MONSTATS_AIDIST,
              MONSTATS_AIDISTN,
              MONSTATS_AIDISTH,
              MONSTATS_AIP1,
              MONSTATS_AIP1N,
              MONSTATS_AIP1H,
              MONSTATS_AIP2,
              MONSTATS_AIP2N,
              MONSTATS_AIP2H,
              MONSTATS_AIP3,
              MONSTATS_AIP3N,
              MONSTATS_AIP3H,
              MONSTATS_AIP4,
              MONSTATS_AIP4N,
              MONSTATS_AIP4H,
              MONSTATS_AIP5,
              MONSTATS_AIP5N,
              MONSTATS_AIP5H,
              MONSTATS_AIP6,
              MONSTATS_AIP6N,
              MONSTATS_AIP6H,
              MONSTATS_AIP7,
              MONSTATS_AIP7N,
              MONSTATS_AIP7H,
              MONSTATS_AIP8,
              MONSTATS_AIP8N,
              MONSTATS_AIP8H,
              MONSTATS_MISSA1,
              MONSTATS_MISSA2,
              MONSTATS_MISSS1,
              MONSTATS_MISSS2,
              MONSTATS_MISSS3,
              MONSTATS_MISSS4,
              MONSTATS_MISSC,
              MONSTATS_MISSSQ,
              MONSTATS_ALIGN,
              MONSTATS_ISSPAWN,
              MONSTATS_ISMELEE,
              MONSTATS_NPC,
              MONSTATS_INTERACT,
              MONSTATS_INVENTORY,
              MONSTATS_INTOWN,
              MONSTATS_LUNDEAD,
              MONSTATS_HUNDEAD,
              MONSTATS_DEMON,
              MONSTATS_FLYING,
              MONSTATS_OPENDOORS,
              MONSTATS_BOSS,
              MONSTATS_PRIMEEVIL,
              MONSTATS_KILLABLE,
              MONSTATS_SWITCHAI,
              MONSTATS_NOAURA,
              MONSTATS_NOMULTISHOT,
              MONSTATS_NEVERCOUNT,
              MONSTATS_PETIGNORE,
              MONSTATS_DEATHDMG,
              MONSTATS_GENERICSPAWN,
              MONSTATS_ZOO,
              MONSTATS_SENDSKILLS,
              MONSTATS_SKILL1,
              MONSTATS_SK1MODE,
              MONSTATS_SK1LVL,
              MONSTATS_SKILL2,
              MONSTATS_SK2MODE,
              MONSTATS_SK2LVL,
              MONSTATS_SKILL3,
              MONSTATS_SK3MODE,
              MONSTATS_SK3LVL,
              MONSTATS_SKILL4,
              MONSTATS_SK4MODE,
              MONSTATS_SK4LVL,
              MONSTATS_SKILL5,
              MONSTATS_SK5MODE,
              MONSTATS_SK5LVL,
              MONSTATS_SKILL6,
              MONSTATS_SK6MODE,
              MONSTATS_SK6LVL,
              MONSTATS_SKILL7,
              MONSTATS_SK7MODE,
              MONSTATS_SK7LVL,
              MONSTATS_SKILL8,
              MONSTATS_SK8MODE,
              MONSTATS_SK8LVL,
              MONSTATS_DRAIN,
              MONSTATS_DRAINN,
              MONSTATS_DRAINH,
              MONSTATS_COLDEFFECT,
              MONSTATS_COLDEFFECTN,
              MONSTATS_COLDEFFECTH,
              MONSTATS_RESDM,
              MONSTATS_RESMA,
              MONSTATS_RESFI,
              MONSTATS_RESLI,
              MONSTATS_RESCO,
              MONSTATS_RESPO,
              MONSTATS_RESDMN,
              MONSTATS_RESMAN,
              MONSTATS_RESFIN,
              MONSTATS_RESLIN,
              MONSTATS_RESCON,
              MONSTATS_RESPON,
              MONSTATS_RESDMH,
              MONSTATS_RESMAH,
              MONSTATS_RESFIH,
              MONSTATS_RESLIH,
              MONSTATS_RESCOH,
              MONSTATS_RESPOH,
              MONSTATS_DAMAGEREGEN,
              MONSTATS_SKILLDAMAGE,
              MONSTATS_NORATIO,
              MONSTATS_NOSHLDBLOCK,
              MONSTATS_TOBLOCK,
              MONSTATS_TOBLOCKN,
              MONSTATS_TOBLOCKH,
              MONSTATS_CRIT,
              MONSTATS_MINHP,
              MONSTATS_MAXHP,
              MONSTATS_AC,
              MONSTATS_EXP,
              MONSTATS_A1MIND,
              MONSTATS_A1MAXD,
              MONSTATS_A1TH,
              MONSTATS_A2MIND,
              MONSTATS_A2MAXD,
              MONSTATS_A2TH,
              MONSTATS_S1MIND,
              MONSTATS_S1MAXD,
              MONSTATS_S1TH,
              MONSTATS_MINHPN,
              MONSTATS_MAXHPN,
              MONSTATS_ACN,
              MONSTATS_EXPN,
              MONSTATS_A1MINDN,
              MONSTATS_A1MAXDN,
              MONSTATS_A1THN,
              MONSTATS_A2MINDN,
              MONSTATS_A2MAXDN,
              MONSTATS_A2THN,
              MONSTATS_S1MINDN,
              MONSTATS_S1MAXDN,
              MONSTATS_S1THN,
              MONSTATS_MINHPH,
              MONSTATS_MAXHPH,
              MONSTATS_ACH,
              MONSTATS_EXPH,
              MONSTATS_A1MINDH,
              MONSTATS_A1MAXDH,
              MONSTATS_A1THH,
              MONSTATS_A2MINDH,
              MONSTATS_A2MAXDH,
              MONSTATS_A2THH,
              MONSTATS_S1MINDH,
              MONSTATS_S1MAXDH,
              MONSTATS_S1THH,
              MONSTATS_EL1MODE,
              MONSTATS_EL1TYPE,
              MONSTATS_EL1PCT,
              MONSTATS_EL1MIND,
              MONSTATS_EL1MAXD,
              MONSTATS_EL1DUR,
              MONSTATS_EL1PCTN,
              MONSTATS_EL1MINDN,
              MONSTATS_EL1MAXDN,
              MONSTATS_EL1DURN,
              MONSTATS_EL1PCTH,
              MONSTATS_EL1MINDH,
              MONSTATS_EL1MAXDH,
              MONSTATS_EL1DURH,
              MONSTATS_EL2MODE,
              MONSTATS_EL2TYPE,
              MONSTATS_EL2PCT,
              MONSTATS_EL2MIND,
              MONSTATS_EL2MAXD,
              MONSTATS_EL2DUR,
              MONSTATS_EL2PCTN,
              MONSTATS_EL2MINDN,
              MONSTATS_EL2MAXDN,
              MONSTATS_EL2DURN,
              MONSTATS_EL2PCTH,
              MONSTATS_EL2MINDH,
              MONSTATS_EL2MAXDH,
              MONSTATS_EL2DURH,
              MONSTATS_EL3MODE,
              MONSTATS_EL3TYPE,
              MONSTATS_EL3PCT,
              MONSTATS_EL3MIND,
              MONSTATS_EL3MAXD,
              MONSTATS_EL3DUR,
              MONSTATS_EL3PCTN,
              MONSTATS_EL3MINDN,
              MONSTATS_EL3MAXDN,
              MONSTATS_EL3DURN,
              MONSTATS_EL3PCTH,
              MONSTATS_EL3MINDH,
              MONSTATS_EL3MAXDH,
              MONSTATS_EL3DURH,
              MONSTATS_TREASURECLASS1,
              MONSTATS_TREASURECLASS2,
              MONSTATS_TREASURECLASS3,
              MONSTATS_TREASURECLASS4,
              MONSTATS_TREASURECLASS1N,
              MONSTATS_TREASURECLASS2N,
              MONSTATS_TREASURECLASS3N,
              MONSTATS_TREASURECLASS4N,
              MONSTATS_TREASURECLASS1H,
              MONSTATS_TREASURECLASS2H,
              MONSTATS_TREASURECLASS3H,
              MONSTATS_TREASURECLASS4H,
              MONSTATS_TCQUESTID,
              MONSTATS_TCQUESTCP,
              MONSTATS_SPLENDDEATH,
              MONSTATS_SPLGETMODECHART,
              MONSTATS_SPLENDGENERIC,
              MONSTATS_SPLCLIENTEND,
              MONSTATS_COL_MAX
} MONSTATS_COL_ENUM;

// MonStats2.txt
typedef enum {MONSTATS2_ID,
              MONSTATS2_HEIGHT,
              MONSTATS2_OVERLAYHEIGHT,
              MONSTATS2_PIXHEIGHT,
              MONSTATS2_SIZEX,
              MONSTATS2_SIZEY,
              MONSTATS2_SPAWNCOL,
              MONSTATS2_MELEERNG,
              MONSTATS2_BASEW,
              MONSTATS2_HITCLASS,
              MONSTATS2_HDV,
              MONSTATS2_TRV,
              MONSTATS2_LGV,
              MONSTATS2_RAV,
              MONSTATS2_LAV,
              MONSTATS2_RHV,
              MONSTATS2_LHV,
              MONSTATS2_SHV,
              MONSTATS2_S1V,
              MONSTATS2_S2V,
              MONSTATS2_S3V,
              MONSTATS2_S4V,
              MONSTATS2_S5V,
              MONSTATS2_S6V,
              MONSTATS2_S7V,
              MONSTATS2_S8V,
              MONSTATS2_HD,
              MONSTATS2_TR,
              MONSTATS2_LG,
              MONSTATS2_RA,
              MONSTATS2_LA,
              MONSTATS2_RH,
              MONSTATS2_LH,
              MONSTATS2_SH,
              MONSTATS2_S1,
              MONSTATS2_S2,
              MONSTATS2_S3,
              MONSTATS2_S4,
              MONSTATS2_S5,
              MONSTATS2_S6,
              MONSTATS2_S7,
              MONSTATS2_S8,
              MONSTATS2_TOTALPIECES,
              MONSTATS2_MDT,
              MONSTATS2_MNU,
              MONSTATS2_MWL,
              MONSTATS2_MGH,
              MONSTATS2_MA1,
              MONSTATS2_MA2,
              MONSTATS2_MBL,
              MONSTATS2_MSC,
              MONSTATS2_MS1,
              MONSTATS2_MS2,
              MONSTATS2_MS3,
              MONSTATS2_MS4,
              MONSTATS2_MDD,
              MONSTATS2_MKB,
              MONSTATS2_MSQ,
              MONSTATS2_MRN,
              MONSTATS2_DDT,
              MONSTATS2_DNU,
              MONSTATS2_DWL,
              MONSTATS2_DGH,
              MONSTATS2_DA1,
              MONSTATS2_DA2,
              MONSTATS2_DBL,
              MONSTATS2_DSC,
              MONSTATS2_DS1,
              MONSTATS2_DS2,
              MONSTATS2_DS3,
              MONSTATS2_DS4,
              MONSTATS2_DDD,
              MONSTATS2_DKB,
              MONSTATS2_DSQ,
              MONSTATS2_DRN,
              MONSTATS2_A1MV,
              MONSTATS2_A2MV,
              MONSTATS2_SCMV,
              MONSTATS2_S1MV,
              MONSTATS2_S2MV,
              MONSTATS2_S3MV,
              MONSTATS2_S4MV,
              MONSTATS2_NOGFXHITTEST,
              MONSTATS2_HTTOP,
              MONSTATS2_HTLEFT,
              MONSTATS2_HTWIDTH,
              MONSTATS2_HTHEIGHT,
              MONSTATS2_RESTORE,
              MONSTATS2_AUTOMAPCEL,
              MONSTATS2_NOMAP,
              MONSTATS2_NOOVLY,
              MONSTATS2_ISSEL,
              MONSTATS2_ALSEL,
              MONSTATS2_NOSEL,
              MONSTATS2_SHIFTSEL,
              MONSTATS2_CORPSESEL,
              MONSTATS2_ISATT,
              MONSTATS2_REVIVE,
              MONSTATS2_CRITTER,
              MONSTATS2_SMALL,
              MONSTATS2_LARGE,
              MONSTATS2_SOFT,
              MONSTATS2_INERT,
              MONSTATS2_OBJCOL,
              MONSTATS2_DEADCOL,
              MONSTATS2_UNFLATDEAD,
              MONSTATS2_SHADOW,
              MONSTATS2_NOUNIQUESHIFT,
              MONSTATS2_COMPOSITEDEATH,
              MONSTATS2_LOCALBLOOD,
              MONSTATS2_BLEED,
              MONSTATS2_LIGHT,
              MONSTATS2_LIGHTR,
              MONSTATS2_LIGHTG,
              MONSTATS2_LIGHTB,
              MONSTATS2_UTRANS,
              MONSTATS2_UTRANSN,
              MONSTATS2_UTRANSH,
              MONSTATS2_HEART,
              MONSTATS2_BODYPART,
              MONSTATS2_INFERNOLEN,
              MONSTATS2_INFERNOANIM,
              MONSTATS2_INFERNOROLLBACK,
              MONSTATS2_RESURRECTMODE,
              MONSTATS2_RESURRECTSKILL,
              MONSTATS2_COL_MAX
} MONSTATS2_COL_ENUM;

// MonType.txt
typedef enum {MONTYPE_TYPE,
              MONTYPE_EQUIV1,
              MONTYPE_EQUIV2,
              MONTYPE_EQUIV3,
              MONTYPE_STRSING,
              MONTYPE_STRPLUR,
              MONTYPE_COL_MAX
} MONTYPE_COL_ENUM;

// MonUMod.txt
typedef enum {MONUMOD_UNIQUEMOD,
              MONUMOD_ID,
              MONUMOD_ENABLED,
              MONUMOD_VERSION,
              MONUMOD_XFER,
              MONUMOD_CHAMPION,
              MONUMOD_FPICK,
              MONUMOD_EXCLUDE1,
              MONUMOD_EXCLUDE2,
              MONUMOD_CPICK,
              MONUMOD_CPICKN,
              MONUMOD_CPICKH,
              MONUMOD_UPICK,
              MONUMOD_UPICKN,
              MONUMOD_UPICKH,
              MONUMOD_FINIT,
              MONUMOD_CONSTANTS,
              MONUMOD_COL_MAX
} MONUMOD_COL_ENUM;

// Npc.txt
typedef enum {NPC_NPC,
              NPC_BUYMULT,
              NPC_SELLMULT,
              NPC_REPMULT,
              NPC_QUESTFLAGA,
              NPC_QUESTBUYMULTA,
              NPC_QUESTSELLMULTA,
              NPC_QUESTREPMULTA,
              NPC_QUESTFLAGB,
              NPC_QUESTBUYMULTB,
              NPC_QUESTSELLMULTB,
              NPC_QUESTREPMULTB,
              NPC_QUESTFLAGC,
              NPC_QUESTBUYMULTC,
              NPC_QUESTSELLMULTC,
              NPC_QUESTREPMULTC,
              NPC_MAXBUY,
              NPC_MAXBUYN,
              NPC_MAXBUYH,
              NPC_COL_MAX
} NPC_COL_ENUM;

// Objects.txt
typedef enum {OBJECTS_NAME,
              OBJECTS_ID,
              OBJECTS_TOKEN,
              OBJECTS_SPAWNMAX,
              OBJECTS_SELECTABLE0,
              OBJECTS_SELECTABLE1,
              OBJECTS_SELECTABLE2,
              OBJECTS_SELECTABLE3,
              OBJECTS_SELECTABLE4,
              OBJECTS_SELECTABLE5,
              OBJECTS_SELECTABLE6,
              OBJECTS_SELECTABLE7,
              OBJECTS_TRAPPROB,
              OBJECTS_SIZEX,
              OBJECTS_SIZEY,
              OBJECTS_NTGTFX,
              OBJECTS_NTGTFY,
              OBJECTS_NTGTBX,
              OBJECTS_NTGTBY,
              OBJECTS_FRAMECNT0,
              OBJECTS_FRAMECNT1,
              OBJECTS_FRAMECNT2,
              OBJECTS_FRAMECNT3,
              OBJECTS_FRAMECNT4,
              OBJECTS_FRAMECNT5,
              OBJECTS_FRAMECNT6,
              OBJECTS_FRAMECNT7,
              OBJECTS_FRAMEDELTA0,
              OBJECTS_FRAMEDELTA1,
              OBJECTS_FRAMEDELTA2,
              OBJECTS_FRAMEDELTA3,
              OBJECTS_FRAMEDELTA4,
              OBJECTS_FRAMEDELTA5,
              OBJECTS_FRAMEDELTA6,
              OBJECTS_FRAMEDELTA7,
              OBJECTS_CYCLEANIM0,
              OBJECTS_CYCLEANIM1,
              OBJECTS_CYCLEANIM2,
              OBJECTS_CYCLEANIM3,
              OBJECTS_CYCLEANIM4,
              OBJECTS_CYCLEANIM5,
              OBJECTS_CYCLEANIM6,
              OBJECTS_CYCLEANIM7,
              OBJECTS_LIT0,
              OBJECTS_LIT1,
              OBJECTS_LIT2,
              OBJECTS_LIT3,
              OBJECTS_LIT4,
              OBJECTS_LIT5,
              OBJECTS_LIT6,
              OBJECTS_LIT7,
              OBJECTS_BLOCKSLIGHT0,
              OBJECTS_BLOCKSLIGHT1,
              OBJECTS_BLOCKSLIGHT2,
              OBJECTS_BLOCKSLIGHT3,
              OBJECTS_BLOCKSLIGHT4,
              OBJECTS_BLOCKSLIGHT5,
              OBJECTS_BLOCKSLIGHT6,
              OBJECTS_BLOCKSLIGHT7,
              OBJECTS_HASCOLLISION0,
              OBJECTS_HASCOLLISION1,
              OBJECTS_HASCOLLISION2,
              OBJECTS_HASCOLLISION3,
              OBJECTS_HASCOLLISION4,
              OBJECTS_HASCOLLISION5,
              OBJECTS_HASCOLLISION6,
              OBJECTS_HASCOLLISION7,
              OBJECTS_ISATTACKABLE0,
              OBJECTS_START0,
              OBJECTS_START1,
              OBJECTS_START2,
              OBJECTS_START3,
              OBJECTS_START4,
              OBJECTS_START5,
              OBJECTS_START6,
              OBJECTS_START7,
              OBJECTS_ENVEFFECT,
              OBJECTS_ISDOOR,
              OBJECTS_BLOCKSVIS,
              OBJECTS_ORIENTATION,
              OBJECTS_TRANS,
              OBJECTS_ORDERFLAG0,
              OBJECTS_ORDERFLAG1,
              OBJECTS_ORDERFLAG2,
              OBJECTS_ORDERFLAG3,
              OBJECTS_ORDERFLAG4,
              OBJECTS_ORDERFLAG5,
              OBJECTS_ORDERFLAG6,
              OBJECTS_ORDERFLAG7,
              OBJECTS_PREOPERATE,
              OBJECTS_MODE0,
              OBJECTS_MODE1,
              OBJECTS_MODE2,
              OBJECTS_MODE3,
              OBJECTS_MODE4,
              OBJECTS_MODE5,
              OBJECTS_MODE6,
              OBJECTS_MODE7,
              OBJECTS_YOFFSET,
              OBJECTS_XOFFSET,
              OBJECTS_DRAW,
              OBJECTS_RED,
              OBJECTS_GREEN,
              OBJECTS_BLUE,
              OBJECTS_HD,
              OBJECTS_TR,
              OBJECTS_LG,
              OBJECTS_RA,
              OBJECTS_LA,
              OBJECTS_RH,
              OBJECTS_LH,
              OBJECTS_SH,
              OBJECTS_S1,
              OBJECTS_S2,
              OBJECTS_S3,
              OBJECTS_S4,
              OBJECTS_S5,
              OBJECTS_S6,
              OBJECTS_S7,
              OBJECTS_S8,
              OBJECTS_TOTALPIECES,
              OBJECTS_SUBCLASS,
              OBJECTS_XSPACE,
              OBJECTS_YSPACE,
              OBJECTS_NAMEOFFSET,
              OBJECTS_MONSTEROK,
              OBJECTS_OPERATERANGE,
              OBJECTS_SHRINEFUNCTION,
              OBJECTS_RESTORE,
              OBJECTS_PARM0,
              OBJECTS_PARM1,
              OBJECTS_PARM2,
              OBJECTS_PARM3,
              OBJECTS_PARM4,
              OBJECTS_PARM5,
              OBJECTS_PARM6,
              OBJECTS_PARM7,
              OBJECTS_ACT,
              OBJECTS_LOCKABLE,
              OBJECTS_GORE,
              OBJECTS_SYNC,
              OBJECTS_FLICKER,
              OBJECTS_DAMAGE,
              OBJECTS_BETA,
              OBJECTS_OVERLAY,
              OBJECTS_COLLISIONSUBST,
              OBJECTS_LEFT,
              OBJECTS_TOP,
              OBJECTS_WIDTH,
              OBJECTS_HEIGHT,
              OBJECTS_OPERATEFN,
              OBJECTS_POPULATEFN,
              OBJECTS_INITFN,
              OBJECTS_CLIENTFN,
              OBJECTS_RESTOREVIRGINS,
              OBJECTS_BLOCKMISSILE,
              OBJECTS_DRAWUNDER,
              OBJECTS_OPENWARP,
              OBJECTS_AUTOMAP,
              OBJECTS_COL_MAX
} OBJECTS_COL_ENUM;

// ObjGroup.txt
typedef enum {OBJGROUP_GROUPNAME,
              OBJGROUP_OFFSET,
              OBJGROUP_ID0,
              OBJGROUP_DENSITY0,
              OBJGROUP_PROB0,
              OBJGROUP_ID1,
              OBJGROUP_DENSITY1,
              OBJGROUP_PROB1,
              OBJGROUP_ID2,
              OBJGROUP_DENSITY2,
              OBJGROUP_PROB2,
              OBJGROUP_ID3,
              OBJGROUP_DENSITY3,
              OBJGROUP_PROB3,
              OBJGROUP_ID4,
              OBJGROUP_DENSITY4,
              OBJGROUP_PROB4,
              OBJGROUP_ID5,
              OBJGROUP_DENSITY5,
              OBJGROUP_PROB5,
              OBJGROUP_ID6,
              OBJGROUP_DENSITY6,
              OBJGROUP_PROB6,
              OBJGROUP_ID7,
              OBJGROUP_DENSITY7,
              OBJGROUP_PROB7,
              OBJGROUP_SHRINES,
              OBJGROUP_WELLS,
              OBJGROUP_COL_MAX
} OBJGROUP_COL_ENUM;

// ObjMode.txt
typedef enum {OBJMODE_NAME,
              OBJMODE_TOKEN,
              OBJMODE_COL_MAX
} OBJMODE_COL_ENUM;

// ObjType.txt
typedef enum {OBJTYPE_NAME,
              OBJTYPE_TOKEN,
              OBJTYPE_BETA,
              OBJTYPE_COL_MAX
} OBJTYPE_COL_ENUM;

// Overlay.txt
typedef enum {OVERLAY_OVERLAY,
              OVERLAY_FILENAME,
              OVERLAY_VERSION,
              OVERLAY_FRAMES,
              OVERLAY_CHARACTER,
              OVERLAY_PREDRAW,
              OVERLAY_1OFN,
              OVERLAY_DIR,
              OVERLAY_OPEN,
              OVERLAY_BETA,
              OVERLAY_XOFFSET,
              OVERLAY_YOFFSET,
              OVERLAY_HEIGHT1,
              OVERLAY_HEIGHT2,
              OVERLAY_HEIGHT3,
              OVERLAY_HEIGHT4,
              OVERLAY_ANIMRATE,
              OVERLAY_LOOPWAITTIME,
              OVERLAY_TRANS,
              OVERLAY_INITRADIUS,
              OVERLAY_RADIUS,
              OVERLAY_RED,
              OVERLAY_GREEN,
              OVERLAY_BLUE,
              OVERLAY_NUMDIRECTIONS,
              OVERLAY_LOCALBLOOD,
              OVERLAY_COL_MAX
} OVERLAY_COL_ENUM;

// PetType.txt
typedef enum {PETTYPE_PETTYPE,
              PETTYPE_IDX,
              PETTYPE_GROUP,
              PETTYPE_BASEMAX,
              PETTYPE_WARP,
              PETTYPE_RANGE,
              PETTYPE_PARTYSEND,
              PETTYPE_UNSUMMON,
              PETTYPE_AUTOMAP,
              PETTYPE_NAME,
              PETTYPE_DRAWHP,
              PETTYPE_ICONTYPE,
              PETTYPE_BASEICON,
              PETTYPE_MCLASS1,
              PETTYPE_MICON1,
              PETTYPE_MCLASS2,
              PETTYPE_MICON2,
              PETTYPE_MCLASS3,
              PETTYPE_MICON3,
              PETTYPE_MCLASS4,
              PETTYPE_MICON4,
              PETTYPE_COL_MAX
} PETTYPE_COL_ENUM;

// PlayerClass.txt
typedef enum {PLAYERCLASS_PLAYERCLASS,
              PLAYERCLASS_CODE,
              PLAYERCLASS_COL_MAX
} PLAYERCLASS_COL_ENUM;

// PlrMode.txt
typedef enum {PLRMODE_NAME,
              PLRMODE_TOKEN,
              PLRMODE_CODE,
              PLRMODE_COL_MAX
} PLRMODE_COL_ENUM;

// PlrType.txt
typedef enum {PLRTYPE_NAME,
              PLRTYPE_TOKEN,
              PLRTYPE_COL_MAX
} PLRTYPE_COL_ENUM;

// Properties.txt
typedef enum {PROPERTIES_CODE,
              PROPERTIES_SET1,
              PROPERTIES_VAL1,
              PROPERTIES_FUNC1,
              PROPERTIES_STAT1,
              PROPERTIES_SET2,
              PROPERTIES_VAL2,
              PROPERTIES_FUNC2,
              PROPERTIES_STAT2,
              PROPERTIES_SET3,
              PROPERTIES_VAL3,
              PROPERTIES_FUNC3,
              PROPERTIES_STAT3,
              PROPERTIES_SET4,
              PROPERTIES_VAL4,
              PROPERTIES_FUNC4,
              PROPERTIES_STAT4,
              PROPERTIES_SET5,
              PROPERTIES_VAL5,
              PROPERTIES_FUNC5,
              PROPERTIES_STAT5,
              PROPERTIES_SET6,
              PROPERTIES_VAL6,
              PROPERTIES_FUNC6,
              PROPERTIES_STAT6,
              PROPERTIES_SET7,
              PROPERTIES_VAL7,
              PROPERTIES_FUNC7,
              PROPERTIES_STAT7,
              PROPERTIES_COL_MAX
} PROPERTIES_COL_ENUM;

// QualityItems.txt
typedef enum {QUALITYITEMS_NUMMODS,
              QUALITYITEMS_MOD1CODE,
              QUALITYITEMS_MOD1PARAM,
              QUALITYITEMS_MOD1MIN,
              QUALITYITEMS_MOD1MAX,
              QUALITYITEMS_MOD2CODE,
              QUALITYITEMS_MOD2PARAM,
              QUALITYITEMS_MOD2MIN,
              QUALITYITEMS_MOD2MAX,
              QUALITYITEMS_TOHITMIN,
              QUALITYITEMS_TOHITMAX,
              QUALITYITEMS_DAMMIN,
              QUALITYITEMS_DAMMAX,
              QUALITYITEMS_ACMIN,
              QUALITYITEMS_ACMAX,
              QUALITYITEMS_DURMIN,
              QUALITYITEMS_DURMAX,
              QUALITYITEMS_EFFECT1,
              QUALITYITEMS_EFFECT2,
              QUALITYITEMS_ARMOR,
              QUALITYITEMS_WEAPON,
              QUALITYITEMS_SHIELD,
              QUALITYITEMS_THROWN,
              QUALITYITEMS_SCEPTER,
              QUALITYITEMS_WAND,
              QUALITYITEMS_STAFF,
              QUALITYITEMS_BOW,
              QUALITYITEMS_BOOTS,
              QUALITYITEMS_GLOVES,
              QUALITYITEMS_BELT,
              QUALITYITEMS_LEVEL,
              QUALITYITEMS_MULTIPLY,
              QUALITYITEMS_ADD,
              QUALITYITEMS_COL_MAX
} QUALITYITEMS_COL_ENUM;

// RarePrefix.txt + RareSuffix.txt
typedef enum {RAREAFFIX_NAME,
              RAREAFFIX_VERSION,
              RAREAFFIX_ITYPE1,
              RAREAFFIX_ITYPE2,
              RAREAFFIX_ITYPE3,
              RAREAFFIX_ITYPE4,
              RAREAFFIX_ITYPE5,
              RAREAFFIX_ITYPE6,
              RAREAFFIX_ITYPE7,
              RAREAFFIX_ETYPE1,
              RAREAFFIX_ETYPE2,
              RAREAFFIX_ETYPE3,
              RAREAFFIX_ETYPE4,
              RAREAFFIX_ADD,
              RAREAFFIX_MULTIPLY,
              RAREAFFIX_DIVIDE,
              RAREAFFIX_COL_MAX
} RAREAFFIX_COL_ENUM;

// Runes.txt
typedef enum {RUNES_NAME,
              RUNES_RUNENAME,
              RUNES_COMPLETE,
              RUNES_SERVER,
              RUNES_ITYPE1,
              RUNES_ITYPE2,
              RUNES_ITYPE3,
              RUNES_ITYPE4,
              RUNES_ITYPE5,
              RUNES_ITYPE6,
              RUNES_ETYPE1,
              RUNES_ETYPE2,
              RUNES_ETYPE3,
              RUNES_RUNE1,
              RUNES_RUNE2,
              RUNES_RUNE3,
              RUNES_RUNE4,
              RUNES_RUNE5,
              RUNES_RUNE6,
              RUNES_T1CODE1,
              RUNES_T1PARAM1,
              RUNES_T1MIN1,
              RUNES_T1MAX1,
              RUNES_T1CODE2,
              RUNES_T1PARAM2,
              RUNES_T1MIN2,
              RUNES_T1MAX2,
              RUNES_T1CODE3,
              RUNES_T1PARAM3,
              RUNES_T1MIN3,
              RUNES_T1MAX3,
              RUNES_T1CODE4,
              RUNES_T1PARAM4,
              RUNES_T1MIN4,
              RUNES_T1MAX4,
              RUNES_T1CODE5,
              RUNES_T1PARAM5,
              RUNES_T1MIN5,
              RUNES_T1MAX5,
              RUNES_T1CODE6,
              RUNES_T1PARAM6,
              RUNES_T1MIN6,
              RUNES_T1MAX6,
              RUNES_T1CODE7,
              RUNES_T1PARAM7,
              RUNES_T1MIN7,
              RUNES_T1MAX7,
              RUNES_COL_MAX
} RUNES_COL_ENUM;

// SetItems.txt
typedef enum {SETITEMS_INDEX,
              SETITEMS_SET,
              SETITEMS_ITEM,
              SETITEMS_RARITY,
              SETITEMS_LVL,
              SETITEMS_LVLREQ,
              SETITEMS_CHRTRANSFORM,
              SETITEMS_INVTRANSFORM,
              SETITEMS_INVFILE,
              SETITEMS_FLIPPYFILE,
              SETITEMS_DROPSOUND,
              SETITEMS_DROPSFXFRAME,
              SETITEMS_USESOUND,
              SETITEMS_COSTMULT,
              SETITEMS_COSTADD,
              SETITEMS_ADDFUNC,
              SETITEMS_PROP1,
              SETITEMS_PAR1,
              SETITEMS_MIN1,
              SETITEMS_MAX1,
              SETITEMS_PROP2,
              SETITEMS_PAR2,
              SETITEMS_MIN2,
              SETITEMS_MAX2,
              SETITEMS_PROP3,
              SETITEMS_PAR3,
              SETITEMS_MIN3,
              SETITEMS_MAX3,
              SETITEMS_PROP4,
              SETITEMS_PAR4,
              SETITEMS_MIN4,
              SETITEMS_MAX4,
              SETITEMS_PROP5,
              SETITEMS_PAR5,
              SETITEMS_MIN5,
              SETITEMS_MAX5,
              SETITEMS_PROP6,
              SETITEMS_PAR6,
              SETITEMS_MIN6,
              SETITEMS_MAX6,
              SETITEMS_PROP7,
              SETITEMS_PAR7,
              SETITEMS_MIN7,
              SETITEMS_MAX7,
              SETITEMS_PROP8,
              SETITEMS_PAR8,
              SETITEMS_MIN8,
              SETITEMS_MAX8,
              SETITEMS_PROP9,
              SETITEMS_PAR9,
              SETITEMS_MIN9,
              SETITEMS_MAX9,
              SETITEMS_APROP1A,
              SETITEMS_APAR1A,
              SETITEMS_AMIN1A,
              SETITEMS_AMAX1A,
              SETITEMS_APROP1B,
              SETITEMS_APAR1B,
              SETITEMS_AMIN1B,
              SETITEMS_AMAX1B,
              SETITEMS_APROP2A,
              SETITEMS_APAR2A,
              SETITEMS_AMIN2A,
              SETITEMS_AMAX2A,
              SETITEMS_APROP2B,
              SETITEMS_APAR2B,
              SETITEMS_AMIN2B,
              SETITEMS_AMAX2B,
              SETITEMS_APROP3A,
              SETITEMS_APAR3A,
              SETITEMS_AMIN3A,
              SETITEMS_AMAX3A,
              SETITEMS_APROP3B,
              SETITEMS_APAR3B,
              SETITEMS_AMIN3B,
              SETITEMS_AMAX3B,
              SETITEMS_APROP4A,
              SETITEMS_APAR4A,
              SETITEMS_AMIN4A,
              SETITEMS_AMAX4A,
              SETITEMS_APROP4B,
              SETITEMS_APAR4B,
              SETITEMS_AMIN4B,
              SETITEMS_AMAX4B,
              SETITEMS_APROP5A,
              SETITEMS_APAR5A,
              SETITEMS_AMIN5A,
              SETITEMS_AMAX5A,
              SETITEMS_APROP5B,
              SETITEMS_APAR5B,
              SETITEMS_AMIN5B,
              SETITEMS_AMAX5B,
              SETITEMS_COL_MAX
} SETITEMS_COL_ENUM;

// Sets.txt
typedef enum {SETS_INDEX,
              SETS_NAME,
              SETS_VERSION,
              SETS_LEVEL,
              SETS_PCODE2A,
              SETS_PPARAM2A,
              SETS_PMIN2A,
              SETS_PMAX2A,
              SETS_PCODE2B,
              SETS_PPARAM2B,
              SETS_PMIN2B,
              SETS_PMAX2B,
              SETS_PCODE3A,
              SETS_PPARAM3A,
              SETS_PMIN3A,
              SETS_PMAX3A,
              SETS_PCODE3B,
              SETS_PPARAM3B,
              SETS_PMIN3B,
              SETS_PMAX3B,
              SETS_PCODE4A,
              SETS_PPARAM4A,
              SETS_PMIN4A,
              SETS_PMAX4A,
              SETS_PCODE4B,
              SETS_PPARAM4B,
              SETS_PMIN4B,
              SETS_PMAX4B,
              SETS_PCODE5A,
              SETS_PPARAM5A,
              SETS_PMIN5A,
              SETS_PMAX5A,
              SETS_PCODE5B,
              SETS_PPARAM5B,
              SETS_PMIN5B,
              SETS_PMAX5B,
              SETS_FCODE1,
              SETS_FPARAM1,
              SETS_FMIN1,
              SETS_FMAX1,
              SETS_FCODE2,
              SETS_FPARAM2,
              SETS_FMIN2,
              SETS_FMAX2,
              SETS_FCODE3,
              SETS_FPARAM3,
              SETS_FMIN3,
              SETS_FMAX3,
              SETS_FCODE4,
              SETS_FPARAM4,
              SETS_FMIN4,
              SETS_FMAX4,
              SETS_FCODE5,
              SETS_FPARAM5,
              SETS_FMIN5,
              SETS_FMAX5,
              SETS_FCODE6,
              SETS_FPARAM6,
              SETS_FMIN6,
              SETS_FMAX6,
              SETS_FCODE7,
              SETS_FPARAM7,
              SETS_FMIN7,
              SETS_FMAX7,
              SETS_FCODE8,
              SETS_FPARAM8,
              SETS_FMIN8,
              SETS_FMAX8,
              SETS_COL_MAX
} SETS_COL_ENUM;

// Shrines.txt
typedef enum {SHRINES_SHRINETYPE,
              SHRINES_SHRINENAME,
              SHRINES_EFFECT,
              SHRINES_CODE,
              SHRINES_ARG0,
              SHRINES_ARG1,
              SHRINES_DURATIONINFRAMES,
              SHRINES_RESETTIMEINMINUTES,
              SHRINES_RARITY,
              SHRINES_VIEWNAME,
              SHRINES_NIFTYPHRASE,
              SHRINES_EFFECTCLASS,
              SHRINES_LEVELMIN,
              SHRINES_COL_MAX
} SHRINES_COL_ENUM;

// SkillCalc.txt
typedef enum {SKILLCALC_CODE,
              SKILLCALC_COL_MAX
} SKILLCALC_COL_ENUM;

// SkillDesc.txt
typedef enum {SKILLDESC_SKILLDESC,
              SKILLDESC_SKILLPAGE,
              SKILLDESC_SKILLROW,
              SKILLDESC_SKILLCOLUMN,
              SKILLDESC_LISTROW,
              SKILLDESC_LISTPOOL,
              SKILLDESC_ICONCEL,
              SKILLDESC_STRNAME,
              SKILLDESC_STRSHORT,
              SKILLDESC_STRLONG,
              SKILLDESC_STRALT,
              SKILLDESC_STRMANA,
              SKILLDESC_DESCDAM,
              SKILLDESC_DDAMCALC1,
              SKILLDESC_DDAMCALC2,
              SKILLDESC_P1DMELEM,
              SKILLDESC_P1DMMIN,
              SKILLDESC_P1DMMAX,
              SKILLDESC_P2DMELEM,
              SKILLDESC_P2DMMIN,
              SKILLDESC_P2DMMAX,
              SKILLDESC_P3DMELEM,
              SKILLDESC_P3DMMIN,
              SKILLDESC_P3DMMAX,
              SKILLDESC_DESCATT,
              SKILLDESC_DESCMISSILE1,
              SKILLDESC_DESCMISSILE2,
              SKILLDESC_DESCMISSILE3,
              SKILLDESC_DESCLINE1,
              SKILLDESC_DESCTEXTA1,
              SKILLDESC_DESCTEXTB1,
              SKILLDESC_DESCCALCA1,
              SKILLDESC_DESCCALCB1,
              SKILLDESC_DESCLINE2,
              SKILLDESC_DESCTEXTA2,
              SKILLDESC_DESCTEXTB2,
              SKILLDESC_DESCCALCA2,
              SKILLDESC_DESCCALCB2,
              SKILLDESC_DESCLINE3,
              SKILLDESC_DESCTEXTA3,
              SKILLDESC_DESCTEXTB3,
              SKILLDESC_DESCCALCA3,
              SKILLDESC_DESCCALCB3,
              SKILLDESC_DESCLINE4,
              SKILLDESC_DESCTEXTA4,
              SKILLDESC_DESCTEXTB4,
              SKILLDESC_DESCCALCA4,
              SKILLDESC_DESCCALCB4,
              SKILLDESC_DESCLINE5,
              SKILLDESC_DESCTEXTA5,
              SKILLDESC_DESCTEXTB5,
              SKILLDESC_DESCCALCA5,
              SKILLDESC_DESCCALCB5,
              SKILLDESC_DESCLINE6,
              SKILLDESC_DESCTEXTA6,
              SKILLDESC_DESCTEXTB6,
              SKILLDESC_DESCCALCA6,
              SKILLDESC_DESCCALCB6,
              SKILLDESC_DSC2LINE1,
              SKILLDESC_DSC2TEXTA1,
              SKILLDESC_DSC2TEXTB1,
              SKILLDESC_DSC2CALCA1,
              SKILLDESC_DSC2CALCB1,
              SKILLDESC_DSC2LINE2,
              SKILLDESC_DSC2TEXTA2,
              SKILLDESC_DSC2TEXTB2,
              SKILLDESC_DSC2CALCA2,
              SKILLDESC_DSC2CALCB2,
              SKILLDESC_DSC2LINE3,
              SKILLDESC_DSC2TEXTA3,
              SKILLDESC_DSC2TEXTB3,
              SKILLDESC_DSC2CALCA3,
              SKILLDESC_DSC2CALCB3,
              SKILLDESC_DSC2LINE4,
              SKILLDESC_DSC2TEXTA4,
              SKILLDESC_DSC2TEXTB4,
              SKILLDESC_DSC2CALCA4,
              SKILLDESC_DSC2CALCB4,
              SKILLDESC_DSC3LINE1,
              SKILLDESC_DSC3TEXTA1,
              SKILLDESC_DSC3TEXTB1,
              SKILLDESC_DSC3CALCA1,
              SKILLDESC_DSC3CALCB1,
              SKILLDESC_DSC3LINE2,
              SKILLDESC_DSC3TEXTA2,
              SKILLDESC_DSC3TEXTB2,
              SKILLDESC_DSC3CALCA2,
              SKILLDESC_DSC3CALCB2,
              SKILLDESC_DSC3LINE3,
              SKILLDESC_DSC3TEXTA3,
              SKILLDESC_DSC3TEXTB3,
              SKILLDESC_DSC3CALCA3,
              SKILLDESC_DSC3CALCB3,
              SKILLDESC_DSC3LINE4,
              SKILLDESC_DSC3TEXTA4,
              SKILLDESC_DSC3TEXTB4,
              SKILLDESC_DSC3CALCA4,
              SKILLDESC_DSC3CALCB4,
              SKILLDESC_DSC3LINE5,
              SKILLDESC_DSC3TEXTA5,
              SKILLDESC_DSC3TEXTB5,
              SKILLDESC_DSC3CALCA5,
              SKILLDESC_DSC3CALCB5,
              SKILLDESC_DSC3LINE6,
              SKILLDESC_DSC3TEXTA6,
              SKILLDESC_DSC3TEXTB6,
              SKILLDESC_DSC3CALCA6,
              SKILLDESC_DSC3CALCB6,
              SKILLDESC_DSC3LINE7,
              SKILLDESC_DSC3TEXTA7,
              SKILLDESC_DSC3TEXTB7,
              SKILLDESC_DSC3CALCA7,
              SKILLDESC_DSC3CALCB7,
              SKILLDESC_COL_MAX
} SKILLDESC_COL_ENUM;

// Skills.txt
typedef enum {SKILLS_SKILL,
              SKILLS_ID,
              SKILLS_CHARCLASS,
              SKILLS_SKILLDESC,
              SKILLS_SRVSTFUNC,
              SKILLS_SRVDOFUNC,
              SKILLS_PRGSTACK,
              SKILLS_SRVPRGFUNC1,
              SKILLS_SRVPRGFUNC2,
              SKILLS_SRVPRGFUNC3,
              SKILLS_PRGCALC1,
              SKILLS_PRGCALC2,
              SKILLS_PRGCALC3,
              SKILLS_PRGDAM,
              SKILLS_SRVMISSILE,
              SKILLS_DECQUANT,
              SKILLS_LOB,
              SKILLS_SRVMISSILEA,
              SKILLS_SRVMISSILEB,
              SKILLS_SRVMISSILEC,
              SKILLS_SRVOVERLAY,
              SKILLS_AURAFILTER,
              SKILLS_AURASTATE,
              SKILLS_AURATARGETSTATE,
              SKILLS_AURALENCALC,
              SKILLS_AURARANGECALC,
              SKILLS_AURASTAT1,
              SKILLS_AURASTATCALC1,
              SKILLS_AURASTAT2,
              SKILLS_AURASTATCALC2,
              SKILLS_AURASTAT3,
              SKILLS_AURASTATCALC3,
              SKILLS_AURASTAT4,
              SKILLS_AURASTATCALC4,
              SKILLS_AURASTAT5,
              SKILLS_AURASTATCALC5,
              SKILLS_AURASTAT6,
              SKILLS_AURASTATCALC6,
              SKILLS_AURAEVENT1,
              SKILLS_AURAEVENTFUNC1,
              SKILLS_AURAEVENT2,
              SKILLS_AURAEVENTFUNC2,
              SKILLS_AURAEVENT3,
              SKILLS_AURAEVENTFUNC3,
              SKILLS_AURATGTEVENT,
              SKILLS_AURATGTEVENTFUNC,
              SKILLS_PASSIVESTATE,
              SKILLS_PASSIVEITYPE,
              SKILLS_PASSIVESTAT1,
              SKILLS_PASSIVECALC1,
              SKILLS_PASSIVESTAT2,
              SKILLS_PASSIVECALC2,
              SKILLS_PASSIVESTAT3,
              SKILLS_PASSIVECALC3,
              SKILLS_PASSIVESTAT4,
              SKILLS_PASSIVECALC4,
              SKILLS_PASSIVESTAT5,
              SKILLS_PASSIVECALC5,
              SKILLS_PASSIVEEVENT,
              SKILLS_PASSIVEEVENTFUNC,
              SKILLS_SUMMON,
              SKILLS_PETTYPE,
              SKILLS_PETMAX,
              SKILLS_SUMMODE,
              SKILLS_SUMSKILL1,
              SKILLS_SUMSK1CALC,
              SKILLS_SUMSKILL2,
              SKILLS_SUMSK2CALC,
              SKILLS_SUMSKILL3,
              SKILLS_SUMSK3CALC,
              SKILLS_SUMSKILL4,
              SKILLS_SUMSK4CALC,
              SKILLS_SUMSKILL5,
              SKILLS_SUMSK5CALC,
              SKILLS_SUMUMOD,
              SKILLS_SUMOVERLAY,
              SKILLS_STSUCCESSONLY,
              SKILLS_STSOUND,
              SKILLS_STSOUNDCLASS,
              SKILLS_STSOUNDDELAY,
              SKILLS_WEAPONSND,
              SKILLS_DOSOUND,
              SKILLS_DOSOUNDA,
              SKILLS_DOSOUNDB,
              SKILLS_TGTOVERLAY,
              SKILLS_TGTSOUND,
              SKILLS_PRGOVERLAY,
              SKILLS_PRGSOUND,
              SKILLS_CASTOVERLAY,
              SKILLS_CLTOVERLAYA,
              SKILLS_CLTOVERLAYB,
              SKILLS_CLTSTFUNC,
              SKILLS_CLTDOFUNC,
              SKILLS_CLTPRGFUNC1,
              SKILLS_CLTPRGFUNC2,
              SKILLS_CLTPRGFUNC3,
              SKILLS_CLTMISSILE,
              SKILLS_CLTMISSILEA,
              SKILLS_CLTMISSILEB,
              SKILLS_CLTMISSILEC,
              SKILLS_CLTMISSILED,
              SKILLS_CLTCALC1,
              SKILLS_CLTCALC2,
              SKILLS_CLTCALC3,
              SKILLS_WARP,
              SKILLS_IMMEDIATE,
              SKILLS_ENHANCEABLE,
              SKILLS_ATTACKRANK,
              SKILLS_NOAMMO,
              SKILLS_RANGE,
              SKILLS_WEAPSEL,
              SKILLS_ITYPEA1,
              SKILLS_ITYPEA2,
              SKILLS_ITYPEA3,
              SKILLS_ETYPEA1,
              SKILLS_ETYPEA2,
              SKILLS_ITYPEB1,
              SKILLS_ITYPEB2,
              SKILLS_ITYPEB3,
              SKILLS_ETYPEB1,
              SKILLS_ETYPEB2,
              SKILLS_ANIM,
              SKILLS_SEQTRANS,
              SKILLS_MONANIM,
              SKILLS_SEQNUM,
              SKILLS_SEQINPUT,
              SKILLS_DURABILITY,
              SKILLS_USEATTACKRATE,
              SKILLS_LINEOFSIGHT,
              SKILLS_TARGETABLEONLY,
              SKILLS_SEARCHENEMYXY,
              SKILLS_SEARCHENEMYNEAR,
              SKILLS_SEARCHOPENXY,
              SKILLS_SELECTPROC,
              SKILLS_TARGETCORPSE,
              SKILLS_TARGETPET,
              SKILLS_TARGETALLY,
              SKILLS_TARGETITEM,
              SKILLS_ATTACKNOMANA,
              SKILLS_TGTPLACECHECK,
              SKILLS_ITEMEFFECT,
              SKILLS_ITEMCLTEFFECT,
              SKILLS_ITEMTGTDO,
              SKILLS_ITEMTARGET,
              SKILLS_ITEMCHECKSTART,
              SKILLS_ITEMCLTCHECKSTART,
              SKILLS_ITEMCASTSOUND,
              SKILLS_ITEMCASTOVERLAY,
              SKILLS_SKPOINTS,
              SKILLS_REQLEVEL,
              SKILLS_MAXLVL,
              SKILLS_REQSTR,
              SKILLS_REQDEX,
              SKILLS_REQINT,
              SKILLS_REQVIT,
              SKILLS_REQSKILL1,
              SKILLS_REQSKILL2,
              SKILLS_REQSKILL3,
              SKILLS_RESTRICT,
              SKILLS_STATE1,
              SKILLS_STATE2,
              SKILLS_STATE3,
              SKILLS_DELAY,
              SKILLS_LEFTSKILL,
              SKILLS_REPEAT,
              SKILLS_CHECKFUNC,
              SKILLS_NOCOSTINSTATE,
              SKILLS_USEMANAONDO,
              SKILLS_STARTMANA,
              SKILLS_MINMANA,
              SKILLS_MANASHIFT,
              SKILLS_MANA,
              SKILLS_LVLMANA,
              SKILLS_INTERRUPT,
              SKILLS_INTOWN,
              SKILLS_AURA,
              SKILLS_PERIODIC,
              SKILLS_PERDELAY,
              SKILLS_FINISHING,
              SKILLS_PASSIVE,
              SKILLS_PROGRESSIVE,
              SKILLS_GENERAL,
              SKILLS_SCROLL,
              SKILLS_CALC1,
              SKILLS_CALC2,
              SKILLS_CALC3,
              SKILLS_CALC4,
              SKILLS_PARAM1,
              SKILLS_PARAM2,
              SKILLS_PARAM3,
              SKILLS_PARAM4,
              SKILLS_PARAM5,
              SKILLS_PARAM6,
              SKILLS_PARAM7,
              SKILLS_PARAM8,
              SKILLS_INGAME,
              SKILLS_TOHIT,
              SKILLS_LEVTOHIT,
              SKILLS_TOHITCALC,
              SKILLS_RESULTFLAGS,
              SKILLS_HITFLAGS,
              SKILLS_HITCLASS,
              SKILLS_KICK,
              SKILLS_HITSHIFT,
              SKILLS_SRCDAM,
              SKILLS_MINDAM,
              SKILLS_MINLEVDAM1,
              SKILLS_MINLEVDAM2,
              SKILLS_MINLEVDAM3,
              SKILLS_MINLEVDAM4,
              SKILLS_MINLEVDAM5,
              SKILLS_MAXDAM,
              SKILLS_MAXLEVDAM1,
              SKILLS_MAXLEVDAM2,
              SKILLS_MAXLEVDAM3,
              SKILLS_MAXLEVDAM4,
              SKILLS_MAXLEVDAM5,
              SKILLS_DMGSYMPERCALC,
              SKILLS_ETYPE,
              SKILLS_EMIN,
              SKILLS_EMINLEV1,
              SKILLS_EMINLEV2,
              SKILLS_EMINLEV3,
              SKILLS_EMINLEV4,
              SKILLS_EMINLEV5,
              SKILLS_EMAX,
              SKILLS_EMAXLEV1,
              SKILLS_EMAXLEV2,
              SKILLS_EMAXLEV3,
              SKILLS_EMAXLEV4,
              SKILLS_EMAXLEV5,
              SKILLS_EDMGSYMPERCALC,
              SKILLS_ELEN,
              SKILLS_ELEVLEN1,
              SKILLS_ELEVLEN2,
              SKILLS_ELEVLEN3,
              SKILLS_ELENSYMPERCALC,
              SKILLS_AITYPE,
              SKILLS_AIBONUS,
              SKILLS_COSTMULT,
              SKILLS_COSTADD,
              SKILLS_COL_MAX
} SKILLS_COL_ENUM;

// SoundEnviron.txt
typedef enum {SOUNDENVIRON_HANDLE,
              SOUNDENVIRON_INDEX,
              SOUNDENVIRON_SONG,
              SOUNDENVIRON_DAYAMBIENCE,
              SOUNDENVIRON_NIGHTAMBIENCE,
              SOUNDENVIRON_DAYEVENT,
              SOUNDENVIRON_NIGHTEVENT,
              SOUNDENVIRON_EVENTDELAY,
              SOUNDENVIRON_INDOORS,
              SOUNDENVIRON_MATERIAL1,
              SOUNDENVIRON_MATERIAL2,
              SOUNDENVIRON_EAXENVIRON,
              SOUNDENVIRON_EAXENVSIZE,
              SOUNDENVIRON_EAXENVDIFF,
              SOUNDENVIRON_EAXROOMVOL,
              SOUNDENVIRON_EAXROOMHF,
              SOUNDENVIRON_EAXDECAYTIME,
              SOUNDENVIRON_EAXDECAYHF,
              SOUNDENVIRON_EAXREFLECT,
              SOUNDENVIRON_EAXREFLECTDELAY,
              SOUNDENVIRON_EAXREVERB,
              SOUNDENVIRON_EAXREVDELAY,
              SOUNDENVIRON_EAXROOMROLL,
              SOUNDENVIRON_EAXAIRABSORB,
              SOUNDENVIRON_COL_MAX
} SOUNDENVIRON_COL_ENUM;

// Sounds.txt
typedef enum {SOUNDS_SOUND,
              SOUNDS_INDEX,
              SOUNDS_FILENAME,
              SOUNDS_VOLUME,
              SOUNDS_GROUPSIZE,
              SOUNDS_LOOP,
              SOUNDS_FADEIN,
              SOUNDS_FADEOUT,
              SOUNDS_DEFERINST,
              SOUNDS_STOPINST,
              SOUNDS_DURATION,
              SOUNDS_COMPOUND,
              SOUNDS_REVERB,
              SOUNDS_FALLOFF,
              SOUNDS_CACHE,
              SOUNDS_ASYNCONLY,
              SOUNDS_PRIORITY,
              SOUNDS_STREAM,
              SOUNDS_STEREO,
              SOUNDS_TRACKING,
              SOUNDS_SOLO,
              SOUNDS_MUSICVOL,
              SOUNDS_BLOCK1,
              SOUNDS_BLOCK2,
              SOUNDS_BLOCK3,
              SOUNDS_COL_MAX
} SOUNDS_COL_ENUM;

// States.txt
typedef enum {STATES_STATE,
              STATES_ID,
              STATES_GROUP,
              STATES_REMHIT,
              STATES_NOSEND,
              STATES_TRANSFORM,
              STATES_AURA,
              STATES_CURABLE,
              STATES_CURSE,
              STATES_ACTIVE,
              STATES_IMMED,
              STATES_RESTRICT,
              STATES_DISGUISE,
              STATES_BLUE,
              STATES_ATTBLUE,
              STATES_DAMBLUE,
              STATES_ARMBLUE,
              STATES_RFBLUE,
              STATES_RLBLUE,
              STATES_RCBLUE,
              STATES_STAMBARBLUE,
              STATES_RPBLUE,
              STATES_ATTRED,
              STATES_DAMRED,
              STATES_ARMRED,
              STATES_RFRED,
              STATES_RLRED,
              STATES_RCRED,
              STATES_RPRED,
              STATES_EXP,
              STATES_PLRSTAYDEATH,
              STATES_MONSTAYDEATH,
              STATES_BOSSSTAYDEATH,
              STATES_HIDE,
              STATES_SHATTER,
              STATES_UDEAD,
              STATES_LIFE,
              STATES_GREEN,
              STATES_PGSV,
              STATES_NOOVERLAYS,
              STATES_NOCLEAR,
              STATES_BOSSINV,
              STATES_MELEEONLY,
              STATES_NOTONDEAD,
              STATES_OVERLAY1,
              STATES_OVERLAY2,
              STATES_OVERLAY3,
              STATES_OVERLAY4,
              STATES_PGSVOVERLAY,
              STATES_CASTOVERLAY,
              STATES_REMOVERLAY,
              STATES_STAT,
              STATES_SETFUNC,
              STATES_REMFUNC,
              STATES_MISSILE,
              STATES_SKILL,
              STATES_ITEMTYPE,
              STATES_ITEMTRANS,
              STATES_COLORPRI,
              STATES_COLORSHIFT,
              STATES_LIGHTR,
              STATES_LIGHTG,
              STATES_LIGHTB,
              STATES_ONSOUND,
              STATES_OFFSOUND,
              STATES_GFXTYPE,
              STATES_GFXCLASS,
              STATES_CLTEVENT,
              STATES_CLTEVENTFUNC,
              STATES_CLTACTIVEFUNC,
              STATES_SRVACTIVEFUNC,
              STATES_COL_MAX
} STATES_COL_ENUM;

// StorePage.txt
typedef enum {STOREPAGE_STOREPAGE,
              STOREPAGE_CODE,
              STOREPAGE_COL_MAX
} STOREPAGE_COL_ENUM;

// SuperUniques.txt
typedef enum {SUPERUNIQUES_SUPERUNIQUE,
              SUPERUNIQUES_NAME,
              SUPERUNIQUES_CLASS,
              SUPERUNIQUES_HCIDX,
              SUPERUNIQUES_MONSOUND,
              SUPERUNIQUES_MOD1,
              SUPERUNIQUES_MOD2,
              SUPERUNIQUES_MOD3,
              SUPERUNIQUES_MINGRP,
              SUPERUNIQUES_MAXGRP,
              SUPERUNIQUES_ECLASS,
              SUPERUNIQUES_AUTOPOS,
              SUPERUNIQUES_STACKS,
              SUPERUNIQUES_REPLACEABLE,
              SUPERUNIQUES_UTRANS,
              SUPERUNIQUES_UTRANSN,
              SUPERUNIQUES_UTRANSH,
              SUPERUNIQUES_TC,
              SUPERUNIQUES_TCN,
              SUPERUNIQUES_TCH,
              SUPERUNIQUES_COL_MAX
} SUPERUNIQUES_COL_ENUM;

// TreasureClassEx.txt
typedef enum {TREASURECLASSEX_TREASURECLASS,
              TREASURECLASSEX_GROUP,
              TREASURECLASSEX_LEVEL,
              TREASURECLASSEX_PICKS,
              TREASURECLASSEX_UNIQUE,
              TREASURECLASSEX_SET,
              TREASURECLASSEX_RARE,
              TREASURECLASSEX_MAGIC,
              TREASURECLASSEX_NODROP,
              TREASURECLASSEX_ITEM1,
              TREASURECLASSEX_PROB1,
              TREASURECLASSEX_ITEM2,
              TREASURECLASSEX_PROB2,
              TREASURECLASSEX_ITEM3,
              TREASURECLASSEX_PROB3,
              TREASURECLASSEX_ITEM4,
              TREASURECLASSEX_PROB4,
              TREASURECLASSEX_ITEM5,
              TREASURECLASSEX_PROB5,
              TREASURECLASSEX_ITEM6,
              TREASURECLASSEX_PROB6,
              TREASURECLASSEX_ITEM7,
              TREASURECLASSEX_PROB7,
              TREASURECLASSEX_ITEM8,
              TREASURECLASSEX_PROB8,
              TREASURECLASSEX_ITEM9,
              TREASURECLASSEX_PROB9,
              TREASURECLASSEX_ITEM10,
              TREASURECLASSEX_PROB10,
              TREASURECLASSEX_SUMITEMS,
              TREASURECLASSEX_TOTALPROB,
              TREASURECLASSEX_DROPCHANCE,
              TREASURECLASSEX_COL_MAX
} TREASURECLASSEX_COL_ENUM;

// UniqueAppellation.txt
typedef enum {UNIQUEAPPELLATION_NAME,
              UNIQUEAPPELLATION_COL_MAX
} UNIQUEAPPELLATION_COL_ENUM;

// UniqueItems.txt
typedef enum {UNIQUEITEMS_INDEX,
              UNIQUEITEMS_VERSION,
              UNIQUEITEMS_ENABLED,
              UNIQUEITEMS_LADDER,
              UNIQUEITEMS_RARITY,
              UNIQUEITEMS_NOLIMIT,
              UNIQUEITEMS_LVL,
              UNIQUEITEMS_LVLREQ,
              UNIQUEITEMS_CODE,
              UNIQUEITEMS_CARRY1,
              UNIQUEITEMS_COSTMULT,
              UNIQUEITEMS_COSTADD,
              UNIQUEITEMS_CHRTRANSFORM,
              UNIQUEITEMS_INVTRANSFORM,
              UNIQUEITEMS_FLIPPYFILE,
              UNIQUEITEMS_INVFILE,
              UNIQUEITEMS_DROPSOUND,
              UNIQUEITEMS_DROPSFXFRAME,
              UNIQUEITEMS_USESOUND,
              UNIQUEITEMS_PROP1,
              UNIQUEITEMS_PAR1,
              UNIQUEITEMS_MIN1,
              UNIQUEITEMS_MAX1,
              UNIQUEITEMS_PROP2,
              UNIQUEITEMS_PAR2,
              UNIQUEITEMS_MIN2,
              UNIQUEITEMS_MAX2,
              UNIQUEITEMS_PROP3,
              UNIQUEITEMS_PAR3,
              UNIQUEITEMS_MIN3,
              UNIQUEITEMS_MAX3,
              UNIQUEITEMS_PROP4,
              UNIQUEITEMS_PAR4,
              UNIQUEITEMS_MIN4,
              UNIQUEITEMS_MAX4,
              UNIQUEITEMS_PROP5,
              UNIQUEITEMS_PAR5,
              UNIQUEITEMS_MIN5,
              UNIQUEITEMS_MAX5,
              UNIQUEITEMS_PROP6,
              UNIQUEITEMS_PAR6,
              UNIQUEITEMS_MIN6,
              UNIQUEITEMS_MAX6,
              UNIQUEITEMS_PROP7,
              UNIQUEITEMS_PAR7,
              UNIQUEITEMS_MIN7,
              UNIQUEITEMS_MAX7,
              UNIQUEITEMS_PROP8,
              UNIQUEITEMS_PAR8,
              UNIQUEITEMS_MIN8,
              UNIQUEITEMS_MAX8,
              UNIQUEITEMS_PROP9,
              UNIQUEITEMS_PAR9,
              UNIQUEITEMS_MIN9,
              UNIQUEITEMS_MAX9,
              UNIQUEITEMS_PROP10,
              UNIQUEITEMS_PAR10,
              UNIQUEITEMS_MIN10,
              UNIQUEITEMS_MAX10,
              UNIQUEITEMS_PROP11,
              UNIQUEITEMS_PAR11,
              UNIQUEITEMS_MIN11,
              UNIQUEITEMS_MAX11,
              UNIQUEITEMS_PROP12,
              UNIQUEITEMS_PAR12,
              UNIQUEITEMS_MIN12,
              UNIQUEITEMS_MAX12,
              UNIQUEITEMS_COL_MAX
} UNIQUEITEMS_COL_ENUM;

// UniquePrefix.txt
typedef enum {UNIQUEPREFIX_NAME,
              UNIQUEPREFIX_COL_MAX
} UNIQUEPREFIX_COL_ENUM;

// UniqueSuffix.txt
typedef enum {UNIQUESUFFIX_NAME,
              UNIQUESUFFIX_COL_MAX
} UNIQUESUFFIX_COL_ENUM;

// UniqueTitle.txt
typedef enum {UNIQUETITLE_NAME,
              UNIQUETITLE_NAMCO,
              UNIQUETITLE_COL_MAX
} UNIQUETITLE_COL_ENUM;

// WeaponClass.txt
typedef enum {WEAPONCLASS_WEAPONCLASS,
              WEAPONCLASS_CODE,
              WEAPONCLASS_COL_MAX
} WEAPONCLASS_COL_ENUM;


// column headers of all .txt to open
// --> they need to be initialised by txt_init_header_names()
typedef struct
{
   char * awm_header               [AWM_COL_MAX];
   char * armtype_header           [ARMTYPE_COL_MAX];
   char * automagic_header         [AUTOMAGIC_COL_MAX];
   char * automap_header           [AUTOMAP_COL_MAX];
   char * belts_header             [BELTS_COL_MAX];
   char * bodylocs_header          [BODYLOCS_COL_MAX];
   char * books_header             [BOOKS_COL_MAX];
   char * charstats_header         [CHARSTATS_COL_MAX];
   char * colors_header            [COLORS_COL_MAX];
   char * compcode_header          [COMPCODE_COL_MAX];
   char * composit_header          [COMPOSIT_COL_MAX];
   char * cubemain_header          [CUBEMAIN_COL_MAX];
   char * cubemod_header           [CUBEMOD_COL_MAX];
   char * cubetype_header          [CUBETYPE_COL_MAX];
   char * difficultylevels_header  [DIFFICULTYLEVELS_COL_MAX];
   char * elemtypes_header         [ELEMTYPES_COL_MAX];
   char * events_header            [EVENTS_COL_MAX];
   char * experience_header        [EXPERIENCE_COL_MAX];
   char * gamble_header            [GAMBLE_COL_MAX];
   char * gems_header              [GEMS_COL_MAX];
   char * hiredesc_header          [HIREDESC_COL_MAX];
   char * hireling_header          [HIRELING_COL_MAX];
   char * hitclass_header          [HITCLASS_COL_MAX];
   char * inventory_header         [INVENTORY_COL_MAX];
   char * itemratio_header         [ITEMRATIO_COL_MAX];
   char * itemstatcost_header      [ITEMSTATCOST_COL_MAX];
   char * itemtypes_header         [ITEMTYPES_COL_MAX];
   char * levels_header            [LEVELS_COL_MAX];
   char * lowqualityitems_header   [LOWQUALITYITEMS_COL_MAX];
   char * lvlmaze_header           [LVLMAZE_COL_MAX];
   char * lvlprest_header          [LVLPREST_COL_MAX];
   char * lvlsub_header            [LVLSUB_COL_MAX];
   char * lvltypes_header          [LVLTYPES_COL_MAX];
   char * lvlwarp_header           [LVLWARP_COL_MAX];
   char * magicaffix_header        [MAGICAFFIX_COL_MAX];
   char * misscalc_header          [MISSCALC_COL_MAX];
   char * missiles_header          [MISSILES_COL_MAX];
   char * monai_header             [MONAI_COL_MAX];
   char * monequip_header          [MONEQUIP_COL_MAX];
   char * monlvl_header            [MONLVL_COL_MAX];
   char * monmode_header           [MONMODE_COL_MAX];
   char * monname_header           [MONNAME_COL_MAX];
   char * monplace_header          [MONPLACE_COL_MAX];
   char * monpreset_header         [MONPRESET_COL_MAX];
   char * monseq_header            [MONSEQ_COL_MAX];
   char * monprop_header           [MONPROP_COL_MAX];
   char * monsounds_header         [MONSOUNDS_COL_MAX];
   char * monstats_header          [MONSTATS_COL_MAX];
   char * monstats2_header         [MONSTATS2_COL_MAX];
   char * montype_header           [MONTYPE_COL_MAX];
   char * monumod_header           [MONUMOD_COL_MAX];
   char * npc_header               [NPC_COL_MAX];
   char * objects_header           [OBJECTS_COL_MAX];
   char * objgroup_header          [OBJGROUP_COL_MAX];
   char * objmode_header           [OBJMODE_COL_MAX];
   char * objtype_header           [OBJTYPE_COL_MAX];
   char * overlay_header           [OVERLAY_COL_MAX];
   char * pettype_header           [PETTYPE_COL_MAX];
   char * playerclass_header       [PLAYERCLASS_COL_MAX];
   char * plrmode_header           [PLRMODE_COL_MAX];
   char * plrtype_header           [PLRTYPE_COL_MAX];
   char * properties_header        [PROPERTIES_COL_MAX];
   char * qualityitems_header      [QUALITYITEMS_COL_MAX];
   char * rareaffix_header         [RAREAFFIX_COL_MAX];
   char * runes_header             [RUNES_COL_MAX];
   char * setitems_header          [SETITEMS_COL_MAX];
   char * sets_header              [SETS_COL_MAX];
   char * shrines_header           [SHRINES_COL_MAX];
   char * skillcalc_header         [SKILLCALC_COL_MAX];
   char * skilldesc_header         [SKILLDESC_COL_MAX];
   char * skills_header            [SKILLS_COL_MAX];
   char * soundenviron_header      [SOUNDENVIRON_COL_MAX];
   char * sounds_header            [SOUNDS_COL_MAX];
   char * states_header            [STATES_COL_MAX];
   char * storepage_header         [STOREPAGE_COL_MAX];
   char * superuniques_header      [SUPERUNIQUES_COL_MAX];
   char * treasureclassex_header   [TREASURECLASSEX_COL_MAX];
   char * uniqueappellation_header [UNIQUEAPPELLATION_COL_MAX];
   char * uniqueitems_header       [UNIQUEITEMS_COL_MAX];
   char * uniqueprefix_header      [UNIQUEPREFIX_COL_MAX];
   char * uniquesuffix_header      [UNIQUESUFFIX_COL_MAX];
   char * uniquetitle_header       [UNIQUETITLE_COL_MAX];
   char * weaponclass_header       [WEAPONCLASS_COL_MAX];
} TXT_COL_NAMES_S;

// a .txt internal datas
typedef struct
{
   TXT_ENUM txt_idx;
   char     filename[80];
   UBYTE    * buffer;
   long     buffer_length;
   long     nb_columns;
   long     nb_rows;

   // columns
   char ** header; // pointer on 1 table of char * in TXT_COL_NAMES_S
   int  nb_header;
   char *** col;   // 1 table of pointers to 1 table of char *
                   // usage : ptr_txt->col[column_id][line] = "string_value";
} TXT_S;

// a struct that contain 1 propertie datas, for checks in various .txt
typedef struct
{
   char * code;
   char * param;
   char * min;
   char * max;
} PROP_S;

#endif
